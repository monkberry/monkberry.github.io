{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 0620426d6700a23ab93e","webpack:///./src/index.js","webpack:///./~/monkberry/monkberry.js","webpack:///./src/example/example.js","webpack:///./src/highlight.js/highlight.js","webpack:///./src/highlight.js/index.js","webpack:///./src/highlight.js/languages/javascript.js","webpack:///./src/highlight.js/languages/monk.js","webpack:///./src/highlight.js/languages/xml.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./~/monkberry-events/lib/index.js","webpack:///./~/monkberry-events/~/dom-delegate/lib/delegate.js","webpack:///./~/monkberry-events/~/dom-delegate/lib/index.js","webpack:///./src/example/template.monk"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","fetch","_interopRequireDefault","obj","__esModule","default","getLatestReleaseVersion","version","document","querySelector","then","response","json","data","textContent","name","highlightCodeBlocks","blocks","querySelectorAll","i","length","_index2","highlightBlock","initExample","result","_example2","showAds","ads","classList","add","_index","_example","addEventListener","setTimeout","window","Monkberry","this","parent","nested","nodes","context","onRender","onUpdate","onRemove","Map","items","Object","create","next","transformArray","array","keys","options","t","__index__","value","key","transformObject","render","template","node","view","noCache","pool","pop","nodeType","insertBefore","appendTo","prerender","times","push","loop","map","j","len","transform","arrayLength","childrenSize","Array","isArray","remove","update","cond","child","test","ref","insert","prototype","parentNode","removeChild","indexOf","splice","constructor","toNode","appendChild","Error","createDocument","fragment","createDocumentFragment","query","matches","element","forEach","callback","defineProperty","root","state","todos","text","complete","_monkberry2","_template2","on","event","preventDefault","input","_monkberry","_template","_typeof","Symbol","iterator","factory","self","hljs","escape","replace","tag","nodeName","toLowerCase","testRe","re","lexeme","match","exec","index","isNotHighlighted","language","blockLanguage","block","classes","className","getLanguage","split","inherit","nodeStream","_nodeStream","offset","firstChild","nextSibling","nodeValue","mergeStreams","original","highlighted","selectStream","open","attr_str","a","attributes","join","close","processed","nodeStack","stream","substr","reverse","compileLanguage","reStr","source","langRe","global","RegExp","case_insensitive","compileMode","mode","compiled","keywords","beginKeywords","compiled_keywords","flatten","str","kw","pair","Number","lexemesRe","lexemes","begin","beginRe","end","endsWithParent","endRe","terminator_end","illegal","illegalRe","undefined","relevance","contains","expanded_contains","variants","v","starts","terminators","concat","filter","Boolean","highlight","ignore_illegals","continuation","subMode","endOfMode","endsParent","isIllegal","keywordMatch","match_str","hasOwnProperty","buildSpan","classname","insideSpan","leaveOpen","noPrefix","classPrefix","openSpan","closeSpan","processKeywords","top","mode_buffer","last_index","lastIndex","keyword_match","processSubLanguage","explicit","subLanguage","languages","continuations","highlightAuto","processBuffer","startNewMode","processLexeme","buffer","new_mode","skip","excludeBegin","returnBegin","end_mode","origin","returnEnd","excludeEnd","current","count","e","message","languageSubset","second_best","fixMarkup","tabReplace","p1","useBR","buildClassName","prevClassName","currentLang","resultLang","aliases","trim","createElementNS","innerHTML","originalStream","resultNode","configure","user_options","initHighlighting","called","initHighlightingOnLoad","registerLanguage","lang","alias","listLanguages","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","COMMENT","inherits","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","CSS_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","keyword","literal","built_in","monkberry","PARAMS","FUNCTION_NAMES","FUNCTIONS","FILTER","OF","TAGS","XML_IDENT_RE","TAG_INTERNALS","normalizeName","String","TypeError","normalizeValue","iteratorFor","shift","done","support","iterable","Headers","headers","append","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","ArrayBuffer","get","set","type","rejected","decode","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","Request","url","credentials","referrer","form","bytes","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","Response","bodyInit","status","ok","statusText","list","values","getAll","has","thisArg","entries","clone","redirectStatuses","redirect","RangeError","location","init","responseURL","getResponseHeader","request","XMLHttpRequest","responseText","ontimeout","withCredentials","responseType","setRequestHeader","send","polyfill","_domDelegate","eventType","selector","handler","_this","useCapture","arguments","delegates","Delegate","delegate","off","listenerMap","handle","bind","matchesTag","tagName","matchesRoot","rootElement","matchesId","removeEventListener","captureForType","matcher","matcherParam","slice","listener","listenerList","singleEventType","l","phase","returned","target","EVENTIGNORE","eventPhase","currentTarget","fire","parentElement","el","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","Element","destroy","ol0","createElement","children0","form1","input2","button3","text4","createTextNode","setAttribute","__update__","template_for0","__data__","li0","child0","child1","todo","template_for0_if0","template_for0_else1","del0","text1","em0","filters"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(fetch) {\"use strict\";\n\t\n\tvar _index = __webpack_require__(4);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _example = __webpack_require__(2);\n\t\n\tvar _example2 = _interopRequireDefault(_example);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t  //setTimeout(animateStars, 500);\n\t  getLatestReleaseVersion();\n\t  highlightCodeBlocks();\n\t  initExample();\n\t  setTimeout(showAds, 3000);\n\t});\n\t\n\twindow.addEventListener('resize', function () {\n\t  //animateStars();\n\t});\n\t\n\tfunction showIntro() {\n\t  var intro = document.querySelector('.js-intro');\n\t  if (intro) {\n\t    intro.classList.add('-visible');\n\t  }\n\t}\n\t\n\tfunction animateStars() {\n\t  var stars = document.querySelector('.js-stars');\n\t  if (stars) {\n\t    var body = document.body,\n\t        html = document.documentElement;\n\t    var height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n\t\n\t    stars.style.height = height + 'px';\n\t    stars.classList.add('-visible');\n\t  }\n\t\n\t  setTimeout(showIntro, 700);\n\t}\n\t\n\tfunction getLatestReleaseVersion() {\n\t  var version = document.querySelector('.js-version');\n\t  if (version) {\n\t    fetch('https://api.github.com/repos/monkberry/monkberry/tags').then(function (response) {\n\t      return response.json();\n\t    }).then(function (data) {\n\t      return version.textContent = 'v' + data[0].name;\n\t    });\n\t  }\n\t}\n\t\n\tfunction highlightCodeBlocks() {\n\t  var blocks = document.querySelectorAll('pre code');\n\t  for (var i = 0; i < blocks.length; i++) {\n\t    _index2.default.highlightBlock(blocks[i]);\n\t  }\n\t}\n\t\n\tfunction initExample() {\n\t  var result = document.querySelector('.js-result');\n\t  if (result) {\n\t    (0, _example2.default)(result);\n\t  }\n\t}\n\t\n\tfunction showAds() {\n\t  var ads = document.querySelector('#carbonads');\n\t  if (ads) {\n\t    ads.classList.add('-visible');\n\t  }\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**                                      _    _\n\t *                     /\\/\\   ___  _ __ | | _| |__   ___ _ __ _ __ _   _\n\t *                    /    \\ / _ \\| '_ \\| |/ / '_ \\ / _ \\ '__| '__| | | |\n\t *                   / /\\/\\ \\ (_) | | | |   <| |_) |  __/ |  | |  | |_| |\n\t *                   \\/    \\/\\___/|_| |_|_|\\_\\_.__/ \\___|_|  |_|   \\__, |\n\t *                                                                 |___/\n\t *\n\t *        +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\t *  Enter ->  |       |                                   |           |           |       |\n\t *        +   +   +   +---+   +---+---+   +---+---+   +   +   +---+   +   +---+   +   +   +\n\t *        |       |           |                   |   |       |       |   |   |       |   |\n\t *        +---+---+---+---+---+   +---+---+---+---+   +---+---+   +---+   +   +---+---+   +\n\t *        |       |               |       |           |       |       |   |           |   |\n\t *        +   +   +   +---+---+---+   +   +   +---+---+   +   +---+   +   +---+---+   +   +\n\t *        |   |       |           |   |   |       |       |               |   |           |\n\t *        +   +---+---+   +---+   +   +   +---+   +   +---+---+---+---+---+   +   +   +---+\n\t *        |   |       |       |       |       |   |   |       |       |   |       |   |   |\n\t *        +   +---+   +---+   +---+---+---+   +   +   +   +   +   +   +   +---+---+   +   +\n\t *        |           |       |       |   |       |       |   |   |   |           |   |   |\n\t *        +---+---+---+   +---+   +   +   +   +---+---+---+   +---+   +---+---+   +   +   +\n\t *        |   |       |           |       |   |       |       |       |               |   |\n\t *        +   +   +   +---+---+---+   +---+   +   +   +   +---+   +---+---+   +---+---+   +\n\t *        |   |   |           |           |   |   |   |       |   |       |   |           |\n\t *        +   +   +---+---+   +---+---+---+   +---+   +---+   +   +   +   +   +   +---+   +\n\t *        |       |                           |       |   |       |   |       |   |       |\n\t *        +---+---+   +   +   +---+---+---+---+   +---+   +---+   +   +---+---+   +   +---+\n\t *        |           |   |                               |       |               |       -> Exit\n\t *        +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n\t */\n\t(function (document) {\n\t  /**\n\t   * Monkberry\n\t   * @class\n\t   */\n\t  function Monkberry() {\n\t    this.parent = null; // Parent view.\n\t    this.nested = []; // Nested views.\n\t    this.nodes = []; // Root DOM nodes.\n\t    this.context = null; // Optional context.\n\t    this.onRender = null; // Function to call on render.\n\t    this.onUpdate = null; // Function to call on update.\n\t    this.onRemove = null; // Function to call on remove.\n\t  }\n\t\n\t  /**\n\t   * Render template and attach it to node.\n\t   * @param {Monkberry} template\n\t   * @param {Element} node\n\t   * @param {{noCache: Boolean, context: Object}=} options\n\t   * @return {Monkberry}\n\t   */\n\t  Monkberry.render = function (template, node, options) {\n\t    var view;\n\t\n\t    if (options && options.noCache) {\n\t      view = new template();\n\t    } else {\n\t      view = template.pool.pop() || new template();\n\t    }\n\t\n\t    if (node.nodeType == 8) {\n\t      view.insertBefore(node);\n\t    } else {\n\t      view.appendTo(node);\n\t    }\n\t\n\t    if (options && options.context) {\n\t      view.context = options.context;\n\t    }\n\t\n\t    if (view.onRender) {\n\t      view.onRender();\n\t    }\n\t\n\t    return view;\n\t  };\n\t\n\t  /**\n\t   * Prerepder template for future usage.\n\t   * @param {Monkberry} template - Template name.\n\t   * @param {Number} times - Times of prerender.\n\t   */\n\t  Monkberry.prerender = function (template, times) {\n\t    while (times--) {\n\t      template.pool.push(new template());\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Main loops processor.\n\t   */\n\t  Monkberry.loop = function (parent, node, map, template, array, options) {\n\t    var i, j, len, keys, transform, arrayLength, childrenSize = map.length;\n\t\n\t    // Get array length, and convert object to array if needed.\n\t    if (Array.isArray(array)) {\n\t      transform = transformArray;\n\t      arrayLength = array.length;\n\t    } else {\n\t      transform = transformObject;\n\t      keys = Object.keys(array);\n\t      arrayLength = keys.length;\n\t    }\n\t\n\t    // If new array contains less items what before, remove surpluses.\n\t    len = childrenSize - arrayLength;\n\t    for (i in map.items) {\n\t      if (len-- > 0) {\n\t        map.items[i].remove();\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t\n\t    // If there is already some views, update there data with new.\n\t    j = 0;\n\t    for (i in map.items) {\n\t      map.items[i].update(transform(array, keys, j, options));\n\t      j++;\n\t    }\n\t\n\t    // If new array contains more items when previous, render new views and append them.\n\t    for (j = childrenSize, len = arrayLength; j < len; j++) {\n\t      // Render new view.\n\t      var view = Monkberry.render(template, node);\n\t\n\t      // Set view hierarchy.\n\t      view.parent = parent;\n\t      parent.nested.push(view);\n\t\n\t      // Set context.\n\t      if (parent.context) {\n\t        view.context = parent.context;\n\t      }\n\t\n\t      // Remember to remove from children map on view remove.\n\t      i = map.push(view);\n\t      view.onRemove = (function (i) {\n\t        return function () {\n\t          map.remove(i);\n\t        };\n\t      })(i);\n\t\n\t      // Set view data (note what it must be after adding nodes to DOM).\n\t      view.update(transform(array, keys, j, options));\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Main if processor.\n\t   */\n\t  Monkberry.cond = function (parent, node, child/*.ref*/, template, test) {\n\t    if (child.ref) { // If view was already inserted, update or remove it.\n\t      if (!test) {\n\t        child.ref.remove();\n\t      }\n\t    } else if (test) {\n\t      // Render new view.\n\t      var view = Monkberry.render(template, node);\n\t\n\t      // Set view hierarchy.\n\t      view.parent = parent;\n\t      parent.nested.push(view);\n\t\n\t      // Set context.\n\t      if (parent.context) {\n\t        view.context = parent.context;\n\t      }\n\t\n\t      // Remember to remove child ref on remove of view.\n\t      child.ref = view;\n\t      view.onRemove = function () {\n\t        child.ref = null;\n\t      };\n\t    }\n\t\n\t    return test;\n\t  };\n\t\n\t  /**\n\t   * Main custom tags processor.\n\t   */\n\t  Monkberry.insert = function (parent, node, child/*.ref*/, template, data) {\n\t    if (child.ref) { // If view was already inserted, update or remove it.\n\t        child.ref.update(data);\n\t    } else {\n\t      // Render new view.\n\t      var view = Monkberry.render(template, node);\n\t\n\t      // Set view hierarchy.\n\t      view.parent = parent;\n\t      parent.nested.push(view);\n\t\n\t      // Set context.\n\t      if (parent.context) {\n\t        view.context = parent.context;\n\t      }\n\t\n\t      // Remember to remove child ref on remove of view.\n\t      child.ref = view;\n\t      view.onRemove = function () {\n\t        child.ref = null;\n\t      };\n\t\n\t      // Set view data (note what it must be after adding nodes to DOM).\n\t      view.update(data);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Remove view from DOM.\n\t   */\n\t  Monkberry.prototype.remove = function () {\n\t    // Remove appended nodes.\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      this.nodes[i].parentNode.removeChild(this.nodes[i]);\n\t    }\n\t\n\t    // Remove self from parent's children map or child ref.\n\t    if (this.onRemove) {\n\t      this.onRemove();\n\t    }\n\t\n\t    // Remove all nested views.\n\t    i = this.nested.length;\n\t    while (i--) {\n\t      this.nested[i].remove();\n\t    }\n\t\n\t    // Remove this view from parent's nested views.\n\t    if (this.parent) {\n\t      i = this.parent.nested.indexOf(this);\n\t      this.parent.nested.splice(i, 1);\n\t      this.parent = null;\n\t    }\n\t\n\t    // Store view in pool for reuse in future.\n\t    this.constructor.pool.push(this);\n\t  };\n\t\n\t  /**\n\t   * @param {Element} toNode\n\t   */\n\t  Monkberry.prototype.appendTo = function (toNode) {\n\t    for (var i = 0, len = this.nodes.length; i < len; i++) {\n\t      toNode.appendChild(this.nodes[i]);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @param {Element} toNode\n\t   */\n\t  Monkberry.prototype.insertBefore = function (toNode) {\n\t    if (toNode.parentNode) {\n\t      for (var i = 0, len = this.nodes.length; i < len; i++) {\n\t        toNode.parentNode.insertBefore(this.nodes[i], toNode);\n\t      }\n\t    } else {\n\t      throw new Error(\n\t        \"Can not insert child view into parent node. \" +\n\t        \"You need append your view first and then update.\"\n\t      );\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Return rendered node, or DocumentFragment of rendered nodes if more then one root node in template.\n\t   * @returns {Element|DocumentFragment}\n\t   */\n\t  Monkberry.prototype.createDocument = function () {\n\t    if (this.nodes.length == 1) {\n\t      return this.nodes[0];\n\t    } else {\n\t      var fragment = document.createDocumentFragment();\n\t      for (var i = 0, len = this.nodes.length; i < len; i++) {\n\t        fragment.appendChild(this.nodes[i]);\n\t      }\n\t      return fragment;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * @param {string} query\n\t   * @returns {Element}\n\t   */\n\t  Monkberry.prototype.querySelector = function (query) {\n\t    for (var i = 0; i < this.nodes.length; i++) {\n\t      if (this.nodes[i].matches && this.nodes[i].matches(query)) {\n\t        return this.nodes[i];\n\t      }\n\t\n\t      if (this.nodes[i].nodeType === 8) {\n\t        throw 'Can not use querySelector with non-element nodes on first level.';\n\t      }\n\t\n\t      if (this.nodes[i].querySelector) {\n\t        var element = this.nodes[i].querySelector(query);\n\t        if (element) {\n\t          return element;\n\t        }\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t\n\t\n\t  /**\n\t   * Simple Map implementation with length property.\n\t   */\n\t  function Map() {\n\t    this.items = Object.create(null);\n\t    this.length = 0;\n\t    this.next = 0;\n\t  }\n\t\n\t  Map.prototype.push = function (element) {\n\t    this.items[this.next] = element;\n\t    this.length += 1;\n\t    this.next += 1;\n\t    return this.next - 1;\n\t  };\n\t\n\t  Map.prototype.remove = function (i) {\n\t    if (i in this.items) {\n\t      delete this.items[i];\n\t      this.length -= 1;\n\t    } else {\n\t      throw new Error('You are trying to delete not existing element \"' + i + '\" form map.');\n\t    }\n\t  };\n\t\n\t  Map.prototype.forEach = function (callback) {\n\t    for (var i in this.items) {\n\t      callback(this.items[i]);\n\t    }\n\t  };\n\t\n\t  Monkberry.Map = Map;\n\t\n\t  //\n\t  // Helper function for working with foreach loops data.\n\t  // Will transform data for \"key, value of array\" constructions.\n\t  //\n\t\n\t  function transformArray(array, keys, i, options) {\n\t    if (options) {\n\t      var t = {__index__: i};\n\t      t[options.value] = array[i];\n\t\n\t      if (options.key) {\n\t        t[options.key] = i;\n\t      }\n\t\n\t      return t;\n\t    } else {\n\t      return array[i];\n\t    }\n\t  }\n\t\n\t  function transformObject(array, keys, i, options) {\n\t    if (options) {\n\t      var t = {__index__: i};\n\t      t[options.value] = array[keys[i]];\n\t\n\t      if (options.key) {\n\t        t[options.key] = keys[i];\n\t      }\n\t\n\t      return t;\n\t    } else {\n\t      return array[keys[i]];\n\t    }\n\t  }\n\t\n\t  if (true) {\n\t    module.exports = Monkberry;\n\t  } else {\n\t    window.Monkberry = Monkberry;\n\t  }\n\t})(window.document);\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function (root) {\n\t  var state = {\n\t    todos: [{ text: 'Primum', complete: true }, { text: 'Secundo', complete: false }, { text: 'Tertium', complete: false }]\n\t  };\n\t\n\t  var view = _monkberry2.default.render(_template2.default, root);\n\t  view.update(state);\n\t\n\t  view.on('submit', 'form', function (event) {\n\t    event.preventDefault();\n\t    var input = view.querySelector('input');\n\t\n\t    state.todos.push({ text: input.value, complete: false });\n\t    view.update(state);\n\t\n\t    input.value = '';\n\t  });\n\t};\n\t\n\tvar _monkberry = __webpack_require__(1);\n\t\n\tvar _monkberry2 = _interopRequireDefault(_monkberry);\n\t\n\t__webpack_require__(9);\n\t\n\tvar _template = __webpack_require__(12);\n\t\n\tvar _template2 = _interopRequireDefault(_template);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t/*\n\tSyntax highlighting with language autodetection.\n\thttps://highlightjs.org/\n\t*/\n\t\n\t(function (factory) {\n\t\n\t  // Find the global object for export to both the browser and web workers.\n\t  var globalObject = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) == 'object' && window || (typeof self === 'undefined' ? 'undefined' : _typeof(self)) == 'object' && self;\n\t\n\t  // Setup highlight.js for different environments. First is Node.js or\n\t  // CommonJS.\n\t  if (true) {\n\t    factory(exports);\n\t  } else if (globalObject) {\n\t    // Export hljs globally even when using AMD for cases when this script\n\t    // is loaded with others that may still expect a global hljs.\n\t    globalObject.hljs = factory({});\n\t\n\t    // Finally register the global hljs with AMD.\n\t    if (typeof define === 'function' && define.amd) {\n\t      define([], function () {\n\t        return globalObject.hljs;\n\t      });\n\t    }\n\t  }\n\t})(function (hljs) {\n\t\n\t  /* Utility functions */\n\t\n\t  function escape(value) {\n\t    return value.replace(/&/gm, '&amp;').replace(/</gm, '&lt;').replace(/>/gm, '&gt;');\n\t  }\n\t\n\t  function tag(node) {\n\t    return node.nodeName.toLowerCase();\n\t  }\n\t\n\t  function testRe(re, lexeme) {\n\t    var match = re && re.exec(lexeme);\n\t    return match && match.index == 0;\n\t  }\n\t\n\t  function isNotHighlighted(language) {\n\t    return (/^(no-?highlight|plain|text)$/i.test(language)\n\t    );\n\t  }\n\t\n\t  function blockLanguage(block) {\n\t    var i,\n\t        match,\n\t        length,\n\t        classes = block.className + ' ';\n\t\n\t    classes += block.parentNode ? block.parentNode.className : '';\n\t\n\t    // language-* takes precedence over non-prefixed class names.\n\t    match = /\\blang(?:uage)?-([\\w-]+)\\b/i.exec(classes);\n\t    if (match) {\n\t      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n\t    }\n\t\n\t    classes = classes.split(/\\s+/);\n\t    for (i = 0, length = classes.length; i < length; i++) {\n\t      if (getLanguage(classes[i]) || isNotHighlighted(classes[i])) {\n\t        return classes[i];\n\t      }\n\t    }\n\t  }\n\t\n\t  function inherit(parent, obj) {\n\t    var result = {},\n\t        key;\n\t    for (key in parent) {\n\t      result[key] = parent[key];\n\t    }if (obj) for (key in obj) {\n\t      result[key] = obj[key];\n\t    }return result;\n\t  }\n\t\n\t  /* Stream merging */\n\t\n\t  function nodeStream(node) {\n\t    var result = [];\n\t    (function _nodeStream(node, offset) {\n\t      for (var child = node.firstChild; child; child = child.nextSibling) {\n\t        if (child.nodeType == 3) offset += child.nodeValue.length;else if (child.nodeType == 1) {\n\t          result.push({\n\t            event: 'start',\n\t            offset: offset,\n\t            node: child\n\t          });\n\t          offset = _nodeStream(child, offset);\n\t          // Prevent void elements from having an end tag that would actually\n\t          // double them in the output. There are more void elements in HTML\n\t          // but we list only those realistically expected in code display.\n\t          if (!tag(child).match(/br|hr|img|input/)) {\n\t            result.push({\n\t              event: 'stop',\n\t              offset: offset,\n\t              node: child\n\t            });\n\t          }\n\t        }\n\t      }\n\t      return offset;\n\t    })(node, 0);\n\t    return result;\n\t  }\n\t\n\t  function mergeStreams(original, highlighted, value) {\n\t    var processed = 0;\n\t    var result = '';\n\t    var nodeStack = [];\n\t\n\t    function selectStream() {\n\t      if (!original.length || !highlighted.length) {\n\t        return original.length ? original : highlighted;\n\t      }\n\t      if (original[0].offset != highlighted[0].offset) {\n\t        return original[0].offset < highlighted[0].offset ? original : highlighted;\n\t      }\n\t\n\t      /*\n\t      To avoid starting the stream just before it should stop the order is\n\t      ensured that original always starts first and closes last:\n\t       if (event1 == 'start' && event2 == 'start')\n\t        return original;\n\t      if (event1 == 'start' && event2 == 'stop')\n\t        return highlighted;\n\t      if (event1 == 'stop' && event2 == 'start')\n\t        return original;\n\t      if (event1 == 'stop' && event2 == 'stop')\n\t        return highlighted;\n\t       ... which is collapsed to:\n\t      */\n\t      return highlighted[0].event == 'start' ? original : highlighted;\n\t    }\n\t\n\t    function open(node) {\n\t      function attr_str(a) {\n\t        return ' ' + a.nodeName + '=\"' + escape(a.value) + '\"';\n\t      }\n\t      result += '<' + tag(node) + Array.prototype.map.call(node.attributes, attr_str).join('') + '>';\n\t    }\n\t\n\t    function close(node) {\n\t      result += '</' + tag(node) + '>';\n\t    }\n\t\n\t    function render(event) {\n\t      (event.event == 'start' ? open : close)(event.node);\n\t    }\n\t\n\t    while (original.length || highlighted.length) {\n\t      var stream = selectStream();\n\t      result += escape(value.substr(processed, stream[0].offset - processed));\n\t      processed = stream[0].offset;\n\t      if (stream == original) {\n\t        /*\n\t        On any opening or closing tag of the original markup we first close\n\t        the entire highlighted node stack, then render the original tag along\n\t        with all the following original tags at the same offset and then\n\t        reopen all the tags on the highlighted stack.\n\t        */\n\t        nodeStack.reverse().forEach(close);\n\t        do {\n\t          render(stream.splice(0, 1)[0]);\n\t          stream = selectStream();\n\t        } while (stream == original && stream.length && stream[0].offset == processed);\n\t        nodeStack.reverse().forEach(open);\n\t      } else {\n\t        if (stream[0].event == 'start') {\n\t          nodeStack.push(stream[0].node);\n\t        } else {\n\t          nodeStack.pop();\n\t        }\n\t        render(stream.splice(0, 1)[0]);\n\t      }\n\t    }\n\t    return result + escape(value.substr(processed));\n\t  }\n\t\n\t  /* Initialization */\n\t\n\t  function compileLanguage(language) {\n\t\n\t    function reStr(re) {\n\t      return re && re.source || re;\n\t    }\n\t\n\t    function langRe(value, global) {\n\t      return new RegExp(reStr(value), 'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : ''));\n\t    }\n\t\n\t    function compileMode(mode, parent) {\n\t      if (mode.compiled) return;\n\t      mode.compiled = true;\n\t\n\t      mode.keywords = mode.keywords || mode.beginKeywords;\n\t      if (mode.keywords) {\n\t        var compiled_keywords = {};\n\t\n\t        var flatten = function flatten(className, str) {\n\t          if (language.case_insensitive) {\n\t            str = str.toLowerCase();\n\t          }\n\t          str.split(' ').forEach(function (kw) {\n\t            var pair = kw.split('|');\n\t            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n\t          });\n\t        };\n\t\n\t        if (typeof mode.keywords == 'string') {\n\t          // string\n\t          flatten('keyword', mode.keywords);\n\t        } else {\n\t          Object.keys(mode.keywords).forEach(function (className) {\n\t            flatten(className, mode.keywords[className]);\n\t          });\n\t        }\n\t        mode.keywords = compiled_keywords;\n\t      }\n\t      mode.lexemesRe = langRe(mode.lexemes || /\\b\\w+\\b/, true);\n\t\n\t      if (parent) {\n\t        if (mode.beginKeywords) {\n\t          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n\t        }\n\t        if (!mode.begin) mode.begin = /\\B|\\b/;\n\t        mode.beginRe = langRe(mode.begin);\n\t        if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n\t        if (mode.end) mode.endRe = langRe(mode.end);\n\t        mode.terminator_end = reStr(mode.end) || '';\n\t        if (mode.endsWithParent && parent.terminator_end) mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n\t      }\n\t      if (mode.illegal) mode.illegalRe = langRe(mode.illegal);\n\t      if (mode.relevance === undefined) mode.relevance = 1;\n\t      if (!mode.contains) {\n\t        mode.contains = [];\n\t      }\n\t      var expanded_contains = [];\n\t      mode.contains.forEach(function (c) {\n\t        if (c.variants) {\n\t          c.variants.forEach(function (v) {\n\t            expanded_contains.push(inherit(c, v));\n\t          });\n\t        } else {\n\t          expanded_contains.push(c == 'self' ? mode : c);\n\t        }\n\t      });\n\t      mode.contains = expanded_contains;\n\t      mode.contains.forEach(function (c) {\n\t        compileMode(c, mode);\n\t      });\n\t\n\t      if (mode.starts) {\n\t        compileMode(mode.starts, parent);\n\t      }\n\t\n\t      var terminators = mode.contains.map(function (c) {\n\t        return c.beginKeywords ? '\\\\.?(' + c.begin + ')\\\\.?' : c.begin;\n\t      }).concat([mode.terminator_end, mode.illegal]).map(reStr).filter(Boolean);\n\t      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : { exec: function exec() /*s*/{\n\t          return null;\n\t        } };\n\t    }\n\t\n\t    compileMode(language);\n\t  }\n\t\n\t  /*\n\t  Core highlighting function. Accepts a language name, or an alias, and a\n\t  string with the code to highlight. Returns an object with the following\n\t  properties:\n\t   - relevance (int)\n\t  - value (an HTML string with highlighting markup)\n\t   */\n\t  function highlight(name, value, ignore_illegals, continuation) {\n\t\n\t    function subMode(lexeme, mode) {\n\t      for (var i = 0; i < mode.contains.length; i++) {\n\t        if (testRe(mode.contains[i].beginRe, lexeme)) {\n\t          return mode.contains[i];\n\t        }\n\t      }\n\t    }\n\t\n\t    function endOfMode(mode, lexeme) {\n\t      if (testRe(mode.endRe, lexeme)) {\n\t        while (mode.endsParent && mode.parent) {\n\t          mode = mode.parent;\n\t        }\n\t        return mode;\n\t      }\n\t      if (mode.endsWithParent) {\n\t        return endOfMode(mode.parent, lexeme);\n\t      }\n\t    }\n\t\n\t    function isIllegal(lexeme, mode) {\n\t      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n\t    }\n\t\n\t    function keywordMatch(mode, match) {\n\t      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n\t      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n\t    }\n\t\n\t    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n\t      var classPrefix = noPrefix ? '' : options.classPrefix,\n\t          openSpan = '<span class=\"' + classPrefix,\n\t          closeSpan = leaveOpen ? '' : '</span>';\n\t\n\t      openSpan += classname + '\">';\n\t\n\t      return openSpan + insideSpan + closeSpan;\n\t    }\n\t\n\t    function processKeywords() {\n\t      if (!top.keywords) return escape(mode_buffer);\n\t      var result = '';\n\t      var last_index = 0;\n\t      top.lexemesRe.lastIndex = 0;\n\t      var match = top.lexemesRe.exec(mode_buffer);\n\t      while (match) {\n\t        result += escape(mode_buffer.substr(last_index, match.index - last_index));\n\t        var keyword_match = keywordMatch(top, match);\n\t        if (keyword_match) {\n\t          relevance += keyword_match[1];\n\t          result += buildSpan(keyword_match[0], escape(match[0]));\n\t        } else {\n\t          result += escape(match[0]);\n\t        }\n\t        last_index = top.lexemesRe.lastIndex;\n\t        match = top.lexemesRe.exec(mode_buffer);\n\t      }\n\t      return result + escape(mode_buffer.substr(last_index));\n\t    }\n\t\n\t    function processSubLanguage() {\n\t      var explicit = typeof top.subLanguage == 'string';\n\t      if (explicit && !languages[top.subLanguage]) {\n\t        return escape(mode_buffer);\n\t      }\n\t\n\t      var result = explicit ? highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) : highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\t\n\t      // Counting embedded language score towards the host language may be disabled\n\t      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n\t      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n\t      // score.\n\t      if (top.relevance > 0) {\n\t        relevance += result.relevance;\n\t      }\n\t      if (explicit) {\n\t        continuations[top.subLanguage] = result.top;\n\t      }\n\t      return buildSpan(result.language, result.value, false, true);\n\t    }\n\t\n\t    function processBuffer() {\n\t      result += top.subLanguage !== undefined ? processSubLanguage() : processKeywords();\n\t      mode_buffer = '';\n\t    }\n\t\n\t    function startNewMode(mode, lexeme) {\n\t      result += mode.className ? buildSpan(mode.className, '', true) : '';\n\t      top = Object.create(mode, { parent: { value: top } });\n\t    }\n\t\n\t    function processLexeme(buffer, lexeme) {\n\t\n\t      mode_buffer += buffer;\n\t\n\t      if (lexeme === undefined) {\n\t        processBuffer();\n\t        return 0;\n\t      }\n\t\n\t      var new_mode = subMode(lexeme, top);\n\t      if (new_mode) {\n\t        if (new_mode.skip) {\n\t          mode_buffer += lexeme;\n\t        } else {\n\t          if (new_mode.excludeBegin) {\n\t            mode_buffer += lexeme;\n\t          }\n\t          processBuffer();\n\t          if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n\t            mode_buffer = lexeme;\n\t          }\n\t        }\n\t        startNewMode(new_mode, lexeme);\n\t        return new_mode.returnBegin ? 0 : lexeme.length;\n\t      }\n\t\n\t      var end_mode = endOfMode(top, lexeme);\n\t      if (end_mode) {\n\t        var origin = top;\n\t        if (origin.skip) {\n\t          mode_buffer += lexeme;\n\t        } else {\n\t          if (!(origin.returnEnd || origin.excludeEnd)) {\n\t            mode_buffer += lexeme;\n\t          }\n\t          processBuffer();\n\t          if (origin.excludeEnd) {\n\t            mode_buffer = lexeme;\n\t          }\n\t        }\n\t        do {\n\t          if (top.className) {\n\t            result += '</span>';\n\t          }\n\t          if (!top.skip) {\n\t            relevance += top.relevance;\n\t          }\n\t          top = top.parent;\n\t        } while (top != end_mode.parent);\n\t        if (end_mode.starts) {\n\t          startNewMode(end_mode.starts, '');\n\t        }\n\t        return origin.returnEnd ? 0 : lexeme.length;\n\t      }\n\t\n\t      if (isIllegal(lexeme, top)) throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n\t\n\t      /*\n\t      Parser should not reach this point as all types of lexemes should be caught\n\t      earlier, but if it does due to some bug make sure it advances at least one\n\t      character forward to prevent infinite looping.\n\t      */\n\t      mode_buffer += lexeme;\n\t      return lexeme.length || 1;\n\t    }\n\t\n\t    var language = getLanguage(name);\n\t    if (!language) {\n\t      throw new Error('Unknown language: \"' + name + '\"');\n\t    }\n\t\n\t    compileLanguage(language);\n\t    var top = continuation || language;\n\t    var continuations = {}; // keep continuations for sub-languages\n\t    var result = '',\n\t        current;\n\t    for (current = top; current != language; current = current.parent) {\n\t      if (current.className) {\n\t        result = buildSpan(current.className, '', true) + result;\n\t      }\n\t    }\n\t    var mode_buffer = '';\n\t    var relevance = 0;\n\t    try {\n\t      var match,\n\t          count,\n\t          index = 0;\n\t      while (true) {\n\t        top.terminators.lastIndex = index;\n\t        match = top.terminators.exec(value);\n\t        if (!match) break;\n\t        count = processLexeme(value.substr(index, match.index - index), match[0]);\n\t        index = match.index + count;\n\t      }\n\t      processLexeme(value.substr(index));\n\t      for (current = top; current.parent; current = current.parent) {\n\t        // close dangling modes\n\t        if (current.className) {\n\t          result += '</span>';\n\t        }\n\t      }\n\t      return {\n\t        relevance: relevance,\n\t        value: result,\n\t        language: name,\n\t        top: top\n\t      };\n\t    } catch (e) {\n\t      if (e.message.indexOf('Illegal') != -1) {\n\t        return {\n\t          relevance: 0,\n\t          value: escape(value)\n\t        };\n\t      } else {\n\t        throw e;\n\t      }\n\t    }\n\t  }\n\t\n\t  /*\n\t  Highlighting with language detection. Accepts a string with the code to\n\t  highlight. Returns an object with the following properties:\n\t   - language (detected language)\n\t  - relevance (int)\n\t  - value (an HTML string with highlighting markup)\n\t  - second_best (object with the same structure for second-best heuristically\n\t    detected language, may be absent)\n\t   */\n\t  function highlightAuto(text, languageSubset) {\n\t    languageSubset = languageSubset || options.languages || Object.keys(languages);\n\t    var result = {\n\t      relevance: 0,\n\t      value: escape(text)\n\t    };\n\t    var second_best = result;\n\t    languageSubset.forEach(function (name) {\n\t      if (!getLanguage(name)) {\n\t        return;\n\t      }\n\t      var current = highlight(name, text, false);\n\t      current.language = name;\n\t      if (current.relevance > second_best.relevance) {\n\t        second_best = current;\n\t      }\n\t      if (current.relevance > result.relevance) {\n\t        second_best = result;\n\t        result = current;\n\t      }\n\t    });\n\t    if (second_best.language) {\n\t      result.second_best = second_best;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /*\n\t  Post-processing of the highlighted markup:\n\t   - replace TABs with something more useful\n\t  - replace real line-breaks with '<br>' for non-pre containers\n\t   */\n\t  function fixMarkup(value) {\n\t    if (options.tabReplace) {\n\t      value = value.replace(/^((<[^>]+>|\\t)+)/gm, function (match, p1 /*..., offset, s*/) {\n\t        return p1.replace(/\\t/g, options.tabReplace);\n\t      });\n\t    }\n\t    if (options.useBR) {\n\t      value = value.replace(/\\n/g, '<br>');\n\t    }\n\t    return value;\n\t  }\n\t\n\t  function buildClassName(prevClassName, currentLang, resultLang) {\n\t    var language = currentLang ? aliases[currentLang] : resultLang,\n\t        result = [prevClassName.trim()];\n\t\n\t    if (!prevClassName.match(/\\bhljs\\b/)) {\n\t      result.push('hljs');\n\t    }\n\t\n\t    if (prevClassName.indexOf(language) === -1) {\n\t      result.push(language);\n\t    }\n\t\n\t    return result.join(' ').trim();\n\t  }\n\t\n\t  /*\n\t  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n\t  two optional parameters for fixMarkup.\n\t  */\n\t  function highlightBlock(block) {\n\t    var language = blockLanguage(block);\n\t    if (isNotHighlighted(language)) return;\n\t\n\t    var node;\n\t    if (options.useBR) {\n\t      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n\t      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n\t    } else {\n\t      node = block;\n\t    }\n\t    var text = node.textContent;\n\t    var result = language ? highlight(language, text, true) : highlightAuto(text);\n\t\n\t    var originalStream = nodeStream(node);\n\t    if (originalStream.length) {\n\t      var resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n\t      resultNode.innerHTML = result.value;\n\t      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n\t    }\n\t    result.value = fixMarkup(result.value);\n\t\n\t    block.innerHTML = result.value;\n\t    block.className = buildClassName(block.className, language, result.language);\n\t    block.result = {\n\t      language: result.language,\n\t      re: result.relevance\n\t    };\n\t    if (result.second_best) {\n\t      block.second_best = {\n\t        language: result.second_best.language,\n\t        re: result.second_best.relevance\n\t      };\n\t    }\n\t  }\n\t\n\t  var options = {\n\t    classPrefix: 'hljs-',\n\t    tabReplace: null,\n\t    useBR: false,\n\t    languages: undefined\n\t  };\n\t\n\t  /*\n\t  Updates highlight.js global options with values passed in the form of an object.\n\t  */\n\t  function configure(user_options) {\n\t    options = inherit(options, user_options);\n\t  }\n\t\n\t  /*\n\t  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n\t  */\n\t  function initHighlighting() {\n\t    if (initHighlighting.called) return;\n\t    initHighlighting.called = true;\n\t\n\t    var blocks = document.querySelectorAll('pre code');\n\t    Array.prototype.forEach.call(blocks, highlightBlock);\n\t  }\n\t\n\t  /*\n\t  Attaches highlighting to the page load event.\n\t  */\n\t  function initHighlightingOnLoad() {\n\t    addEventListener('DOMContentLoaded', initHighlighting, false);\n\t    addEventListener('load', initHighlighting, false);\n\t  }\n\t\n\t  var languages = {};\n\t  var aliases = {};\n\t\n\t  function registerLanguage(name, language) {\n\t    var lang = languages[name] = language(hljs);\n\t    if (lang.aliases) {\n\t      lang.aliases.forEach(function (alias) {\n\t        aliases[alias] = name;\n\t      });\n\t    }\n\t  }\n\t\n\t  function listLanguages() {\n\t    return Object.keys(languages);\n\t  }\n\t\n\t  function getLanguage(name) {\n\t    name = (name || '').toLowerCase();\n\t    return languages[name] || languages[aliases[name]];\n\t  }\n\t\n\t  /* Interface definition */\n\t\n\t  hljs.highlight = highlight;\n\t  hljs.highlightAuto = highlightAuto;\n\t  hljs.fixMarkup = fixMarkup;\n\t  hljs.highlightBlock = highlightBlock;\n\t  hljs.configure = configure;\n\t  hljs.initHighlighting = initHighlighting;\n\t  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n\t  hljs.registerLanguage = registerLanguage;\n\t  hljs.listLanguages = listLanguages;\n\t  hljs.getLanguage = getLanguage;\n\t  hljs.inherit = inherit;\n\t\n\t  // Common regexps\n\t  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n\t  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n\t  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n\t  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n\t  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n\t  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\t\n\t  // Common modes\n\t  hljs.BACKSLASH_ESCAPE = {\n\t    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n\t  };\n\t  hljs.APOS_STRING_MODE = {\n\t    className: 'string',\n\t    begin: '\\'', end: '\\'',\n\t    illegal: '\\\\n',\n\t    contains: [hljs.BACKSLASH_ESCAPE]\n\t  };\n\t  hljs.QUOTE_STRING_MODE = {\n\t    className: 'string',\n\t    begin: '\"', end: '\"',\n\t    illegal: '\\\\n',\n\t    contains: [hljs.BACKSLASH_ESCAPE]\n\t  };\n\t  hljs.PHRASAL_WORDS_MODE = {\n\t    begin: /\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b/\n\t  };\n\t  hljs.COMMENT = function (begin, end, inherits) {\n\t    var mode = hljs.inherit({\n\t      className: 'comment',\n\t      begin: begin, end: end,\n\t      contains: []\n\t    }, inherits || {});\n\t    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n\t    mode.contains.push({\n\t      className: 'doctag',\n\t      begin: \"(?:TODO|FIXME|NOTE|BUG|XXX):\",\n\t      relevance: 0\n\t    });\n\t    return mode;\n\t  };\n\t  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n\t  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n\t  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n\t  hljs.NUMBER_MODE = {\n\t    className: 'number',\n\t    begin: hljs.NUMBER_RE,\n\t    relevance: 0\n\t  };\n\t  hljs.C_NUMBER_MODE = {\n\t    className: 'number',\n\t    begin: hljs.C_NUMBER_RE,\n\t    relevance: 0\n\t  };\n\t  hljs.BINARY_NUMBER_MODE = {\n\t    className: 'number',\n\t    begin: hljs.BINARY_NUMBER_RE,\n\t    relevance: 0\n\t  };\n\t  hljs.CSS_NUMBER_MODE = {\n\t    className: 'number',\n\t    begin: hljs.NUMBER_RE + '(' + '%|em|ex|ch|rem' + '|vw|vh|vmin|vmax' + '|cm|mm|in|pt|pc|px' + '|deg|grad|rad|turn' + '|s|ms' + '|Hz|kHz' + '|dpi|dpcm|dppx' + ')?',\n\t    relevance: 0\n\t  };\n\t  hljs.REGEXP_MODE = {\n\t    className: 'regexp',\n\t    begin: /\\//, end: /\\/[gimuy]*/,\n\t    illegal: /\\n/,\n\t    contains: [hljs.BACKSLASH_ESCAPE, {\n\t      begin: /\\[/, end: /\\]/,\n\t      relevance: 0,\n\t      contains: [hljs.BACKSLASH_ESCAPE]\n\t    }]\n\t  };\n\t  hljs.TITLE_MODE = {\n\t    className: 'title',\n\t    begin: hljs.IDENT_RE,\n\t    relevance: 0\n\t  };\n\t  hljs.UNDERSCORE_TITLE_MODE = {\n\t    className: 'title',\n\t    begin: hljs.UNDERSCORE_IDENT_RE,\n\t    relevance: 0\n\t  };\n\t  hljs.METHOD_GUARD = {\n\t    // excludes method names from keyword processing\n\t    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n\t    relevance: 0\n\t  };\n\t\n\t  return hljs;\n\t});\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar hljs = __webpack_require__(3);\n\thljs.registerLanguage('js', __webpack_require__(5));\n\thljs.registerLanguage('xml', __webpack_require__(7));\n\thljs.registerLanguage('monk', __webpack_require__(6));\n\t\n\thljs.configure({\n\t  languages: ['js', 'xml', 'monk']\n\t});\n\t\n\texports.default = hljs;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (hljs) {\n\t  return {\n\t    aliases: ['js', 'jsx'],\n\t    keywords: {\n\t      keyword: 'in of if for while finally var new function do return void else break catch ' + 'instanceof with throw case default try this switch continue typeof delete ' + 'let yield const export super debugger as async await static ' +\n\t      // ECMAScript 6 modules import\n\t      'import from as',\n\t\n\t      literal: 'true false null undefined NaN Infinity',\n\t      built_in: 'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' + 'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' + 'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' + 'TypeError URIError Number Math Date String RegExp Array Float32Array ' + 'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' + 'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' + 'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' + 'Promise',\n\t      monkberry: 'Monkberry Template'\n\t    },\n\t    contains: [{\n\t      className: 'meta',\n\t      relevance: 10,\n\t      begin: /^\\s*['\"]use (strict|asm)['\"]/\n\t    }, {\n\t      className: 'meta',\n\t      begin: /^#!/, end: /$/\n\t    }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, { // template string\n\t      className: 'string',\n\t      begin: '`', end: '`',\n\t      contains: [hljs.BACKSLASH_ESCAPE, {\n\t        className: 'subst',\n\t        begin: '\\\\$\\\\{', end: '\\\\}'\n\t      }]\n\t    }, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, {\n\t      className: 'number',\n\t      variants: [{ begin: '\\\\b(0[bB][01]+)' }, { begin: '\\\\b(0[oO][0-7]+)' }, { begin: hljs.C_NUMBER_RE }],\n\t      relevance: 0\n\t    }, { // \"value\" container\n\t      begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n\t      keywords: 'return throw case',\n\t      contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.REGEXP_MODE, { // E4X / JSX\n\t        begin: /</, end: /(\\/\\w+|\\w+\\/)>/,\n\t        subLanguage: 'xml',\n\t        contains: [{ begin: /<\\w+\\/>/, skip: true }, { begin: /<\\w+/, end: /(\\/\\w+|\\w+\\/)>/, skip: true, contains: ['self'] }]\n\t      }],\n\t      relevance: 0\n\t    }, {\n\t      className: 'function',\n\t      beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n\t      contains: [hljs.inherit(hljs.TITLE_MODE, { begin: /[A-Za-z$_][0-9A-Za-z$_]*/ }), {\n\t        className: 'params',\n\t        begin: /\\(/, end: /\\)/,\n\t        excludeBegin: true,\n\t        excludeEnd: true,\n\t        contains: [hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE]\n\t      }],\n\t      illegal: /\\[|%/\n\t    }, {\n\t      begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n\t    }, hljs.METHOD_GUARD, { // ES6 class\n\t      className: 'class',\n\t      beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n\t      illegal: /[:\"\\[\\]]/,\n\t      contains: [{ beginKeywords: 'extends' }, hljs.UNDERSCORE_TITLE_MODE]\n\t    }, {\n\t      beginKeywords: 'constructor', end: /\\{/, excludeEnd: true\n\t    }],\n\t    illegal: /#(?!!)/\n\t  };\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (hljs) {\n\t  var PARAMS = {\n\t    className: 'params',\n\t    begin: '\\\\(', end: '\\\\)'\n\t  };\n\t\n\t  var FUNCTION_NAMES = 'attribute block constant cycle date dump include ' + 'max min parent random range source template_from_string';\n\t\n\t  var FUNCTIONS = {\n\t    beginKeywords: FUNCTION_NAMES,\n\t    keywords: { name: FUNCTION_NAMES },\n\t    relevance: 0,\n\t    contains: [PARAMS]\n\t  };\n\t\n\t  var FILTER = {\n\t    begin: /\\|[A-Za-z_]+:?/,\n\t    keywords: 'abs batch capitalize convert_encoding date date_modify default ' + 'escape first format join json_encode keys last length lower ' + 'merge nl2br number_format raw replace reverse round slice sort split ' + 'striptags title trim upper url_encode',\n\t    contains: [FUNCTIONS]\n\t  };\n\t\n\t  var OF = {\n\t    beginKeywords: 'of',\n\t    keywords: {\n\t      keyword: 'of'\n\t    },\n\t    relevance: 0\n\t  };\n\t\n\t  var TAGS = 'for endfor if endif else import unsafe';\n\t\n\t  return {\n\t    aliases: ['monk'],\n\t    case_insensitive: true,\n\t    subLanguage: 'xml',\n\t    contains: [hljs.COMMENT(/\\{#/, /#}/), {\n\t      className: 'template-tag',\n\t      begin: /\\{%/, end: /%}/,\n\t      contains: [{\n\t        className: 'name',\n\t        begin: /\\w+/,\n\t        keywords: TAGS,\n\t        starts: {\n\t          endsWithParent: true,\n\t          contains: [OF, FILTER, FUNCTIONS, hljs.QUOTE_STRING_MODE],\n\t          relevance: 0\n\t        }\n\t      }]\n\t    }, {\n\t      className: 'template-variable',\n\t      begin: /\\{\\{/, end: /}}/,\n\t      contains: ['self', FILTER, FUNCTIONS]\n\t    }, {\n\t      className: 'directive',\n\t      begin: /:/,\n\t      contains: [{\n\t        className: 'template-variable',\n\t        begin: /\\{\\{/, end: /}}/,\n\t        contains: ['self', FILTER, FUNCTIONS]\n\t      }]\n\t    }]\n\t  };\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (hljs) {\n\t  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n\t  var TAG_INTERNALS = {\n\t    endsWithParent: true,\n\t    illegal: /</,\n\t    relevance: 0,\n\t    contains: [{\n\t      className: 'attr',\n\t      begin: XML_IDENT_RE,\n\t      relevance: 0\n\t    }, {\n\t      begin: '=',\n\t      relevance: 0,\n\t      contains: [{\n\t        className: 'string',\n\t        variants: [{ begin: /\"/, end: /\"/ }, { begin: /'/, end: /'/ }, { begin: /[^\\s\\/>]+/ }]\n\t      }]\n\t    }]\n\t  };\n\t  return {\n\t    aliases: ['html', 'xhtml', 'rss', 'atom', 'xsl', 'plist'],\n\t    case_insensitive: true,\n\t    contains: [{\n\t      className: 'meta',\n\t      begin: '<!DOCTYPE', end: '>',\n\t      relevance: 10,\n\t      contains: [{ begin: '\\\\[', end: '\\\\]' }]\n\t    }, hljs.COMMENT('<!--', '-->', {\n\t      relevance: 10\n\t    }), {\n\t      begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n\t      relevance: 10\n\t    }, {\n\t      begin: /<\\?(php)?/, end: /\\?>/,\n\t      subLanguage: 'php',\n\t      contains: [{ begin: '/\\\\*', end: '\\\\*/', skip: true }]\n\t    }, {\n\t      className: 'tag',\n\t      /*\n\t      The lookahead pattern (?=...) ensures that 'begin' only matches\n\t      '<style' as a single word, followed by a whitespace or an\n\t      ending braket. The '$' is needed for the lexeme to be recognized\n\t      by hljs.subMode() that tests lexemes outside the stream.\n\t      */\n\t      begin: '<style(?=\\\\s|>|$)', end: '>',\n\t      keywords: { name: 'style' },\n\t      contains: [TAG_INTERNALS],\n\t      starts: {\n\t        end: '</style>', returnEnd: true,\n\t        subLanguage: ['css', 'xml']\n\t      }\n\t    }, {\n\t      className: 'tag',\n\t      // See the comment in the <style tag about the lookahead pattern\n\t      begin: '<script(?=\\\\s|>|$)', end: '>',\n\t      keywords: { name: 'script' },\n\t      contains: [TAG_INTERNALS],\n\t      starts: {\n\t        end: '\\<\\/script\\>', returnEnd: true,\n\t        subLanguage: ['actionscript', 'javascript', 'handlebars', 'xml']\n\t      }\n\t    }, {\n\t      className: 'meta',\n\t      variants: [{ begin: /<\\?xml/, end: /\\?>/, relevance: 10 }, { begin: /<\\?\\w+/, end: /\\?>/ }]\n\t    }, {\n\t      className: 'tag',\n\t      begin: '</?', end: '/?>',\n\t      contains: [{\n\t        className: 'name', begin: /[^\\/><\\s]+/, relevance: 0\n\t      }, TAG_INTERNALS]\n\t    }]\n\t  };\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*** IMPORTS FROM imports-loader ***/\n\t(function() {\n\t\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\t\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\tmodule.exports = global.fetch;\n\t}.call(global));\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _monkberry = __webpack_require__(1);\n\t\n\tvar _monkberry2 = _interopRequireDefault(_monkberry);\n\t\n\tvar _domDelegate = __webpack_require__(11);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_monkberry2.default.prototype.on = function (eventType, selector, handler) {\n\t  var _this = this;\n\t\n\t  var useCapture = arguments.length <= 3 || arguments[3] === undefined ? undefined : arguments[3];\n\t\n\t  if (!this.delegates) {\n\t    this.delegates = [];\n\t    this.nodes.forEach(function (node, i) {\n\t      if (node.nodeType === 8) {\n\t        throw 'Can not use event delegating with non-element nodes on first level.';\n\t      }\n\t\n\t      _this.delegates[i] = new _domDelegate.Delegate(node);\n\t    });\n\t  }\n\t\n\t  this.delegates.forEach(function (delegate) {\n\t    return delegate.on(eventType, selector, handler, useCapture);\n\t  });\n\t};\n\t\n\t_monkberry2.default.prototype.off = function () {\n\t  var eventType = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];\n\t  var selector = arguments.length <= 1 || arguments[1] === undefined ? undefined : arguments[1];\n\t  var handler = arguments.length <= 2 || arguments[2] === undefined ? undefined : arguments[2];\n\t  var useCapture = arguments.length <= 3 || arguments[3] === undefined ? undefined : arguments[3];\n\t\n\t  this.delegates.forEach(function (delegate) {\n\t    return delegate.off(eventType, selector, handler, useCapture);\n\t  });\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/*jshint browser:true, node:true*/\n\t\n\t'use strict';\n\t\n\tmodule.exports = Delegate;\n\t\n\t/**\n\t * DOM event delegator\n\t *\n\t * The delegator will listen\n\t * for events that bubble up\n\t * to the root node.\n\t *\n\t * @constructor\n\t * @param {Node|string} [root] The root node or a selector string matching the root node\n\t */\n\tfunction Delegate(root) {\n\t\n\t  /**\n\t   * Maintain a map of listener\n\t   * lists, keyed by event name.\n\t   *\n\t   * @type Object\n\t   */\n\t  this.listenerMap = [{}, {}];\n\t  if (root) {\n\t    this.root(root);\n\t  }\n\t\n\t  /** @type function() */\n\t  this.handle = Delegate.prototype.handle.bind(this);\n\t}\n\t\n\t/**\n\t * Start listening for events\n\t * on the provided DOM element\n\t *\n\t * @param  {Node|string} [root] The root node or a selector string matching the root node\n\t * @returns {Delegate} This method is chainable\n\t */\n\tDelegate.prototype.root = function(root) {\n\t  var listenerMap = this.listenerMap;\n\t  var eventType;\n\t\n\t  // Remove master event listeners\n\t  if (this.rootElement) {\n\t    for (eventType in listenerMap[1]) {\n\t      if (listenerMap[1].hasOwnProperty(eventType)) {\n\t        this.rootElement.removeEventListener(eventType, this.handle, true);\n\t      }\n\t    }\n\t    for (eventType in listenerMap[0]) {\n\t      if (listenerMap[0].hasOwnProperty(eventType)) {\n\t        this.rootElement.removeEventListener(eventType, this.handle, false);\n\t      }\n\t    }\n\t  }\n\t\n\t  // If no root or root is not\n\t  // a dom node, then remove internal\n\t  // root reference and exit here\n\t  if (!root || !root.addEventListener) {\n\t    if (this.rootElement) {\n\t      delete this.rootElement;\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * The root node at which\n\t   * listeners are attached.\n\t   *\n\t   * @type Node\n\t   */\n\t  this.rootElement = root;\n\t\n\t  // Set up master event listeners\n\t  for (eventType in listenerMap[1]) {\n\t    if (listenerMap[1].hasOwnProperty(eventType)) {\n\t      this.rootElement.addEventListener(eventType, this.handle, true);\n\t    }\n\t  }\n\t  for (eventType in listenerMap[0]) {\n\t    if (listenerMap[0].hasOwnProperty(eventType)) {\n\t      this.rootElement.addEventListener(eventType, this.handle, false);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * @param {string} eventType\n\t * @returns boolean\n\t */\n\tDelegate.prototype.captureForType = function(eventType) {\n\t  return ['blur', 'error', 'focus', 'load', 'resize', 'scroll'].indexOf(eventType) !== -1;\n\t};\n\t\n\t/**\n\t * Attach a handler to one\n\t * event for all elements\n\t * that match the selector,\n\t * now or in the future\n\t *\n\t * The handler function receives\n\t * three arguments: the DOM event\n\t * object, the node that matched\n\t * the selector while the event\n\t * was bubbling and a reference\n\t * to itself. Within the handler,\n\t * 'this' is equal to the second\n\t * argument.\n\t *\n\t * The node that actually received\n\t * the event can be accessed via\n\t * 'event.target'.\n\t *\n\t * @param {string} eventType Listen for these events\n\t * @param {string|undefined} selector Only handle events on elements matching this selector, if undefined match root element\n\t * @param {function()} handler Handler function - event data passed here will be in event.data\n\t * @param {Object} [eventData] Data to pass in event.data\n\t * @returns {Delegate} This method is chainable\n\t */\n\tDelegate.prototype.on = function(eventType, selector, handler, useCapture) {\n\t  var root, listenerMap, matcher, matcherParam;\n\t\n\t  if (!eventType) {\n\t    throw new TypeError('Invalid event type: ' + eventType);\n\t  }\n\t\n\t  // handler can be passed as\n\t  // the second or third argument\n\t  if (typeof selector === 'function') {\n\t    useCapture = handler;\n\t    handler = selector;\n\t    selector = null;\n\t  }\n\t\n\t  // Fallback to sensible defaults\n\t  // if useCapture not set\n\t  if (useCapture === undefined) {\n\t    useCapture = this.captureForType(eventType);\n\t  }\n\t\n\t  if (typeof handler !== 'function') {\n\t    throw new TypeError('Handler must be a type of Function');\n\t  }\n\t\n\t  root = this.rootElement;\n\t  listenerMap = this.listenerMap[useCapture ? 1 : 0];\n\t\n\t  // Add master handler for type if not created yet\n\t  if (!listenerMap[eventType]) {\n\t    if (root) {\n\t      root.addEventListener(eventType, this.handle, useCapture);\n\t    }\n\t    listenerMap[eventType] = [];\n\t  }\n\t\n\t  if (!selector) {\n\t    matcherParam = null;\n\t\n\t    // COMPLEX - matchesRoot needs to have access to\n\t    // this.rootElement, so bind the function to this.\n\t    matcher = matchesRoot.bind(this);\n\t\n\t  // Compile a matcher for the given selector\n\t  } else if (/^[a-z]+$/i.test(selector)) {\n\t    matcherParam = selector;\n\t    matcher = matchesTag;\n\t  } else if (/^#[a-z0-9\\-_]+$/i.test(selector)) {\n\t    matcherParam = selector.slice(1);\n\t    matcher = matchesId;\n\t  } else {\n\t    matcherParam = selector;\n\t    matcher = matches;\n\t  }\n\t\n\t  // Add to the list of listeners\n\t  listenerMap[eventType].push({\n\t    selector: selector,\n\t    handler: handler,\n\t    matcher: matcher,\n\t    matcherParam: matcherParam\n\t  });\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove an event handler\n\t * for elements that match\n\t * the selector, forever\n\t *\n\t * @param {string} [eventType] Remove handlers for events matching this type, considering the other parameters\n\t * @param {string} [selector] If this parameter is omitted, only handlers which match the other two will be removed\n\t * @param {function()} [handler] If this parameter is omitted, only handlers which match the previous two will be removed\n\t * @returns {Delegate} This method is chainable\n\t */\n\tDelegate.prototype.off = function(eventType, selector, handler, useCapture) {\n\t  var i, listener, listenerMap, listenerList, singleEventType;\n\t\n\t  // Handler can be passed as\n\t  // the second or third argument\n\t  if (typeof selector === 'function') {\n\t    useCapture = handler;\n\t    handler = selector;\n\t    selector = null;\n\t  }\n\t\n\t  // If useCapture not set, remove\n\t  // all event listeners\n\t  if (useCapture === undefined) {\n\t    this.off(eventType, selector, handler, true);\n\t    this.off(eventType, selector, handler, false);\n\t    return this;\n\t  }\n\t\n\t  listenerMap = this.listenerMap[useCapture ? 1 : 0];\n\t  if (!eventType) {\n\t    for (singleEventType in listenerMap) {\n\t      if (listenerMap.hasOwnProperty(singleEventType)) {\n\t        this.off(singleEventType, selector, handler);\n\t      }\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  listenerList = listenerMap[eventType];\n\t  if (!listenerList || !listenerList.length) {\n\t    return this;\n\t  }\n\t\n\t  // Remove only parameter matches\n\t  // if specified\n\t  for (i = listenerList.length - 1; i >= 0; i--) {\n\t    listener = listenerList[i];\n\t\n\t    if ((!selector || selector === listener.selector) && (!handler || handler === listener.handler)) {\n\t      listenerList.splice(i, 1);\n\t    }\n\t  }\n\t\n\t  // All listeners removed\n\t  if (!listenerList.length) {\n\t    delete listenerMap[eventType];\n\t\n\t    // Remove the main handler\n\t    if (this.rootElement) {\n\t      this.rootElement.removeEventListener(eventType, this.handle, useCapture);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t * Handle an arbitrary event.\n\t *\n\t * @param {Event} event\n\t */\n\tDelegate.prototype.handle = function(event) {\n\t  var i, l, type = event.type, root, phase, listener, returned, listenerList = [], target, /** @const */ EVENTIGNORE = 'ftLabsDelegateIgnore';\n\t\n\t  if (event[EVENTIGNORE] === true) {\n\t    return;\n\t  }\n\t\n\t  target = event.target;\n\t\n\t  // Hardcode value of Node.TEXT_NODE\n\t  // as not defined in IE8\n\t  if (target.nodeType === 3) {\n\t    target = target.parentNode;\n\t  }\n\t\n\t  root = this.rootElement;\n\t\n\t  phase = event.eventPhase || ( event.target !== event.currentTarget ? 3 : 2 );\n\t  \n\t  switch (phase) {\n\t    case 1: //Event.CAPTURING_PHASE:\n\t      listenerList = this.listenerMap[1][type];\n\t    break;\n\t    case 2: //Event.AT_TARGET:\n\t      if (this.listenerMap[0] && this.listenerMap[0][type]) listenerList = listenerList.concat(this.listenerMap[0][type]);\n\t      if (this.listenerMap[1] && this.listenerMap[1][type]) listenerList = listenerList.concat(this.listenerMap[1][type]);\n\t    break;\n\t    case 3: //Event.BUBBLING_PHASE:\n\t      listenerList = this.listenerMap[0][type];\n\t    break;\n\t  }\n\t\n\t  // Need to continuously check\n\t  // that the specific list is\n\t  // still populated in case one\n\t  // of the callbacks actually\n\t  // causes the list to be destroyed.\n\t  l = listenerList.length;\n\t  while (target && l) {\n\t    for (i = 0; i < l; i++) {\n\t      listener = listenerList[i];\n\t\n\t      // Bail from this loop if\n\t      // the length changed and\n\t      // no more listeners are\n\t      // defined between i and l.\n\t      if (!listener) {\n\t        break;\n\t      }\n\t\n\t      // Check for match and fire\n\t      // the event if there's one\n\t      //\n\t      // TODO:MCG:20120117: Need a way\n\t      // to check if event#stopImmediatePropagation\n\t      // was called. If so, break both loops.\n\t      if (listener.matcher.call(target, listener.matcherParam, target)) {\n\t        returned = this.fire(event, target, listener);\n\t      }\n\t\n\t      // Stop propagation to subsequent\n\t      // callbacks if the callback returned\n\t      // false\n\t      if (returned === false) {\n\t        event[EVENTIGNORE] = true;\n\t        event.preventDefault();\n\t        return;\n\t      }\n\t    }\n\t\n\t    // TODO:MCG:20120117: Need a way to\n\t    // check if event#stopPropagation\n\t    // was called. If so, break looping\n\t    // through the DOM. Stop if the\n\t    // delegation root has been reached\n\t    if (target === root) {\n\t      break;\n\t    }\n\t\n\t    l = listenerList.length;\n\t    target = target.parentElement;\n\t  }\n\t};\n\t\n\t/**\n\t * Fire a listener on a target.\n\t *\n\t * @param {Event} event\n\t * @param {Node} target\n\t * @param {Object} listener\n\t * @returns {boolean}\n\t */\n\tDelegate.prototype.fire = function(event, target, listener) {\n\t  return listener.handler.call(target, event, target);\n\t};\n\t\n\t/**\n\t * Check whether an element\n\t * matches a generic selector.\n\t *\n\t * @type function()\n\t * @param {string} selector A CSS selector\n\t */\n\tvar matches = (function(el) {\n\t  if (!el) return;\n\t  var p = el.prototype;\n\t  return (p.matches || p.matchesSelector || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector);\n\t}(Element));\n\t\n\t/**\n\t * Check whether an element\n\t * matches a tag selector.\n\t *\n\t * Tags are NOT case-sensitive,\n\t * except in XML (and XML-based\n\t * languages such as XHTML).\n\t *\n\t * @param {string} tagName The tag name to test against\n\t * @param {Element} element The element to test with\n\t * @returns boolean\n\t */\n\tfunction matchesTag(tagName, element) {\n\t  return tagName.toLowerCase() === element.tagName.toLowerCase();\n\t}\n\t\n\t/**\n\t * Check whether an element\n\t * matches the root.\n\t *\n\t * @param {?String} selector In this case this is always passed through as null and not used\n\t * @param {Element} element The element to test with\n\t * @returns boolean\n\t */\n\tfunction matchesRoot(selector, element) {\n\t  /*jshint validthis:true*/\n\t  if (this.rootElement === window) return element === document;\n\t  return this.rootElement === element;\n\t}\n\t\n\t/**\n\t * Check whether the ID of\n\t * the element in 'this'\n\t * matches the given ID.\n\t *\n\t * IDs are case-sensitive.\n\t *\n\t * @param {string} id The ID to test against\n\t * @param {Element} element The element to test with\n\t * @returns boolean\n\t */\n\tfunction matchesId(id, element) {\n\t  return id === element.id;\n\t}\n\t\n\t/**\n\t * Short hand for off()\n\t * and root(), ie both\n\t * with no parameters\n\t *\n\t * @return void\n\t */\n\tDelegate.prototype.destroy = function() {\n\t  this.off();\n\t  this.root();\n\t};\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint browser:true, node:true*/\n\t\n\t'use strict';\n\t\n\t/**\n\t * @preserve Create and manage a DOM event delegator.\n\t *\n\t * @version 0.3.0\n\t * @codingstandard ftlabs-jsv2\n\t * @copyright The Financial Times Limited [All Rights Reserved]\n\t * @license MIT License (see LICENSE.txt)\n\t */\n\tvar Delegate = __webpack_require__(10);\n\t\n\tmodule.exports = function(root) {\n\t  return new Delegate(root);\n\t};\n\t\n\tmodule.exports.Delegate = Delegate;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Monkberry = __webpack_require__(1);\n\t\n\t/**\n\t * @class\n\t */\n\tfunction template() {\n\t  Monkberry.call(this);\n\t  var _this = this;\n\t\n\t  // Create elements\n\t  var ol0 = document.createElement('ol');\n\t  var children0 = new Monkberry.Map();\n\t  var form1 = document.createElement('form');\n\t  var input2 = document.createElement('input');\n\t  var button3 = document.createElement('button');\n\t  var text4 = document.createTextNode('');\n\t\n\t  // Construct dom\n\t  input2.setAttribute(\"type\", \"text\")\n\t  button3.appendChild(document.createTextNode(\"Add #\"));\n\t  button3.appendChild(text4);\n\t  button3.setAttribute(\"type\", \"submit\")\n\t  form1.appendChild(input2);\n\t  form1.appendChild(button3);\n\t\n\t  // Update functions\n\t  this.__update__ = {\n\t    todos: function (todos) {\n\t      Monkberry.loop(_this, ol0, children0, template_for0, todos, {\"key\":\"i\",\"value\":\"todo\"});\n\t      text4.textContent = (todos.length) + (1);\n\t    }\n\t  };\n\t\n\t  // On update actions\n\t  this.onUpdate = function (__data__) {\n\t    children0.forEach(function (view) {\n\t      view.update(__data__);\n\t    });\n\t  };\n\t\n\t  // Set root nodes\n\t  this.nodes = [ol0, form1];\n\t}\n\ttemplate.prototype = Object.create(Monkberry.prototype);\n\ttemplate.prototype.constructor = template;\n\ttemplate.pool = [];\n\ttemplate.filters = {};\n\ttemplate.prototype.update = function (__data__) {\n\t  if (__data__.todos !== undefined) {\n\t    this.__update__.todos(__data__.todos);\n\t  }\n\t  this.onUpdate(__data__);\n\t};\n\t\n\t/**\n\t * @class\n\t */\n\tfunction template_for0() {\n\t  Monkberry.call(this);\n\t  var _this = this;\n\t\n\t  // Create elements\n\t  var li0 = document.createElement('li');\n\t  var child0 = {};\n\t  var child1 = {};\n\t\n\t  // Update functions\n\t  this.__update__ = {\n\t    todo: function (todo) {\n\t      var result;\n\t      result = Monkberry.cond(_this, li0, child0, template_for0_if0, todo.complete);\n\t      Monkberry.cond(_this, li0, child1, template_for0_else1, !result);\n\t    }\n\t  };\n\t\n\t  // On update actions\n\t  this.onUpdate = function (__data__) {\n\t    if (child0.ref) {\n\t      child0.ref.update(__data__);\n\t    }\n\t    if (child1.ref) {\n\t      child1.ref.update(__data__);\n\t    }\n\t  };\n\t\n\t  // Set root nodes\n\t  this.nodes = [li0];\n\t}\n\ttemplate_for0.prototype = Object.create(Monkberry.prototype);\n\ttemplate_for0.prototype.constructor = template_for0;\n\ttemplate_for0.pool = [];\n\ttemplate_for0.prototype.update = function (__data__) {\n\t  if (__data__.todo !== undefined && __data__.__index__ !== undefined) {\n\t    this.__update__.todo(__data__.todo);\n\t  }\n\t  this.onUpdate(__data__);\n\t};\n\t\n\t/**\n\t * @class\n\t */\n\tfunction template_for0_if0() {\n\t  Monkberry.call(this);\n\t\n\t  // Create elements\n\t  var del0 = document.createElement('del');\n\t  var text1 = document.createTextNode('');\n\t\n\t  // Construct dom\n\t  del0.appendChild(text1);\n\t\n\t  // Update functions\n\t  this.__update__ = {\n\t    todo: function (todo) {\n\t      text1.textContent = todo.text;\n\t    }\n\t  };\n\t\n\t  // Set root nodes\n\t  this.nodes = [del0];\n\t}\n\ttemplate_for0_if0.prototype = Object.create(Monkberry.prototype);\n\ttemplate_for0_if0.prototype.constructor = template_for0_if0;\n\ttemplate_for0_if0.pool = [];\n\ttemplate_for0_if0.prototype.update = function (__data__) {\n\t  if (__data__.todo !== undefined) {\n\t    this.__update__.todo(__data__.todo);\n\t  }\n\t};\n\t\n\t/**\n\t * @class\n\t */\n\tfunction template_for0_else1() {\n\t  Monkberry.call(this);\n\t\n\t  // Create elements\n\t  var em0 = document.createElement('em');\n\t  var text1 = document.createTextNode('');\n\t\n\t  // Construct dom\n\t  em0.appendChild(text1);\n\t\n\t  // Update functions\n\t  this.__update__ = {\n\t    todo: function (todo) {\n\t      text1.textContent = todo.text;\n\t    }\n\t  };\n\t\n\t  // Set root nodes\n\t  this.nodes = [em0];\n\t}\n\ttemplate_for0_else1.prototype = Object.create(Monkberry.prototype);\n\ttemplate_for0_else1.prototype.constructor = template_for0_else1;\n\ttemplate_for0_else1.pool = [];\n\ttemplate_for0_else1.prototype.update = function (__data__) {\n\t  if (__data__.todo !== undefined) {\n\t    this.__update__.todo(__data__.todo);\n\t  }\n\t};\n\t\n\tmodule.exports = template;\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0620426d6700a23ab93e\n **/","\"use strict\";\nimport hljs from './highlight.js/index';\nimport example from './example/example';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  //setTimeout(animateStars, 500);\n  getLatestReleaseVersion();\n  highlightCodeBlocks();\n  initExample();\n  setTimeout(showAds, 3000);\n});\n\nwindow.addEventListener('resize', () => {\n  //animateStars();\n});\n\nfunction showIntro() {\n  const intro = document.querySelector('.js-intro');\n  if (intro) {\n    intro.classList.add('-visible');\n  }\n}\n\nfunction animateStars() {\n  const stars = document.querySelector('.js-stars');\n  if (stars) {\n    let body = document.body, html = document.documentElement;\n    let height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n\n    stars.style.height = height + 'px';\n    stars.classList.add('-visible');\n  }\n\n  setTimeout(showIntro, 700);\n}\n\nfunction getLatestReleaseVersion() {\n  const version = document.querySelector('.js-version');\n  if (version) {\n    fetch('https://api.github.com/repos/monkberry/monkberry/tags')\n      .then(response => response.json())\n      .then(data => version.textContent = 'v' + data[0].name);\n  }\n}\n\nfunction highlightCodeBlocks() {\n  const blocks = document.querySelectorAll('pre code');\n  for (let i = 0; i < blocks.length; i++) {\n    hljs.highlightBlock(blocks[i]);\n  }\n}\n\nfunction initExample() {\n  const result = document.querySelector('.js-result');\n  if(result) {\n    example(result);\n  }\n}\n\nfunction showAds() {\n  const ads = document.querySelector('#carbonads');\n  if (ads) {\n    ads.classList.add('-visible');\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**                                      _    _\n *                     /\\/\\   ___  _ __ | | _| |__   ___ _ __ _ __ _   _\n *                    /    \\ / _ \\| '_ \\| |/ / '_ \\ / _ \\ '__| '__| | | |\n *                   / /\\/\\ \\ (_) | | | |   <| |_) |  __/ |  | |  | |_| |\n *                   \\/    \\/\\___/|_| |_|_|\\_\\_.__/ \\___|_|  |_|   \\__, |\n *                                                                 |___/\n *\n *        +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n *  Enter ->  |       |                                   |           |           |       |\n *        +   +   +   +---+   +---+---+   +---+---+   +   +   +---+   +   +---+   +   +   +\n *        |       |           |                   |   |       |       |   |   |       |   |\n *        +---+---+---+---+---+   +---+---+---+---+   +---+---+   +---+   +   +---+---+   +\n *        |       |               |       |           |       |       |   |           |   |\n *        +   +   +   +---+---+---+   +   +   +---+---+   +   +---+   +   +---+---+   +   +\n *        |   |       |           |   |   |       |       |               |   |           |\n *        +   +---+---+   +---+   +   +   +---+   +   +---+---+---+---+---+   +   +   +---+\n *        |   |       |       |       |       |   |   |       |       |   |       |   |   |\n *        +   +---+   +---+   +---+---+---+   +   +   +   +   +   +   +   +---+---+   +   +\n *        |           |       |       |   |       |       |   |   |   |           |   |   |\n *        +---+---+---+   +---+   +   +   +   +---+---+---+   +---+   +---+---+   +   +   +\n *        |   |       |           |       |   |       |       |       |               |   |\n *        +   +   +   +---+---+---+   +---+   +   +   +   +---+   +---+---+   +---+---+   +\n *        |   |   |           |           |   |   |   |       |   |       |   |           |\n *        +   +   +---+---+   +---+---+---+   +---+   +---+   +   +   +   +   +   +---+   +\n *        |       |                           |       |   |       |   |       |   |       |\n *        +---+---+   +   +   +---+---+---+---+   +---+   +---+   +   +---+---+   +   +---+\n *        |           |   |                               |       |               |       -> Exit\n *        +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\n */\n(function (document) {\n  /**\n   * Monkberry\n   * @class\n   */\n  function Monkberry() {\n    this.parent = null; // Parent view.\n    this.nested = []; // Nested views.\n    this.nodes = []; // Root DOM nodes.\n    this.context = null; // Optional context.\n    this.onRender = null; // Function to call on render.\n    this.onUpdate = null; // Function to call on update.\n    this.onRemove = null; // Function to call on remove.\n  }\n\n  /**\n   * Render template and attach it to node.\n   * @param {Monkberry} template\n   * @param {Element} node\n   * @param {{noCache: Boolean, context: Object}=} options\n   * @return {Monkberry}\n   */\n  Monkberry.render = function (template, node, options) {\n    var view;\n\n    if (options && options.noCache) {\n      view = new template();\n    } else {\n      view = template.pool.pop() || new template();\n    }\n\n    if (node.nodeType == 8) {\n      view.insertBefore(node);\n    } else {\n      view.appendTo(node);\n    }\n\n    if (options && options.context) {\n      view.context = options.context;\n    }\n\n    if (view.onRender) {\n      view.onRender();\n    }\n\n    return view;\n  };\n\n  /**\n   * Prerepder template for future usage.\n   * @param {Monkberry} template - Template name.\n   * @param {Number} times - Times of prerender.\n   */\n  Monkberry.prerender = function (template, times) {\n    while (times--) {\n      template.pool.push(new template());\n    }\n  };\n\n  /**\n   * Main loops processor.\n   */\n  Monkberry.loop = function (parent, node, map, template, array, options) {\n    var i, j, len, keys, transform, arrayLength, childrenSize = map.length;\n\n    // Get array length, and convert object to array if needed.\n    if (Array.isArray(array)) {\n      transform = transformArray;\n      arrayLength = array.length;\n    } else {\n      transform = transformObject;\n      keys = Object.keys(array);\n      arrayLength = keys.length;\n    }\n\n    // If new array contains less items what before, remove surpluses.\n    len = childrenSize - arrayLength;\n    for (i in map.items) {\n      if (len-- > 0) {\n        map.items[i].remove();\n      } else {\n        break;\n      }\n    }\n\n    // If there is already some views, update there data with new.\n    j = 0;\n    for (i in map.items) {\n      map.items[i].update(transform(array, keys, j, options));\n      j++;\n    }\n\n    // If new array contains more items when previous, render new views and append them.\n    for (j = childrenSize, len = arrayLength; j < len; j++) {\n      // Render new view.\n      var view = Monkberry.render(template, node);\n\n      // Set view hierarchy.\n      view.parent = parent;\n      parent.nested.push(view);\n\n      // Set context.\n      if (parent.context) {\n        view.context = parent.context;\n      }\n\n      // Remember to remove from children map on view remove.\n      i = map.push(view);\n      view.onRemove = (function (i) {\n        return function () {\n          map.remove(i);\n        };\n      })(i);\n\n      // Set view data (note what it must be after adding nodes to DOM).\n      view.update(transform(array, keys, j, options));\n    }\n  };\n\n  /**\n   * Main if processor.\n   */\n  Monkberry.cond = function (parent, node, child/*.ref*/, template, test) {\n    if (child.ref) { // If view was already inserted, update or remove it.\n      if (!test) {\n        child.ref.remove();\n      }\n    } else if (test) {\n      // Render new view.\n      var view = Monkberry.render(template, node);\n\n      // Set view hierarchy.\n      view.parent = parent;\n      parent.nested.push(view);\n\n      // Set context.\n      if (parent.context) {\n        view.context = parent.context;\n      }\n\n      // Remember to remove child ref on remove of view.\n      child.ref = view;\n      view.onRemove = function () {\n        child.ref = null;\n      };\n    }\n\n    return test;\n  };\n\n  /**\n   * Main custom tags processor.\n   */\n  Monkberry.insert = function (parent, node, child/*.ref*/, template, data) {\n    if (child.ref) { // If view was already inserted, update or remove it.\n        child.ref.update(data);\n    } else {\n      // Render new view.\n      var view = Monkberry.render(template, node);\n\n      // Set view hierarchy.\n      view.parent = parent;\n      parent.nested.push(view);\n\n      // Set context.\n      if (parent.context) {\n        view.context = parent.context;\n      }\n\n      // Remember to remove child ref on remove of view.\n      child.ref = view;\n      view.onRemove = function () {\n        child.ref = null;\n      };\n\n      // Set view data (note what it must be after adding nodes to DOM).\n      view.update(data);\n    }\n  };\n\n  /**\n   * Remove view from DOM.\n   */\n  Monkberry.prototype.remove = function () {\n    // Remove appended nodes.\n    var i = this.nodes.length;\n    while (i--) {\n      this.nodes[i].parentNode.removeChild(this.nodes[i]);\n    }\n\n    // Remove self from parent's children map or child ref.\n    if (this.onRemove) {\n      this.onRemove();\n    }\n\n    // Remove all nested views.\n    i = this.nested.length;\n    while (i--) {\n      this.nested[i].remove();\n    }\n\n    // Remove this view from parent's nested views.\n    if (this.parent) {\n      i = this.parent.nested.indexOf(this);\n      this.parent.nested.splice(i, 1);\n      this.parent = null;\n    }\n\n    // Store view in pool for reuse in future.\n    this.constructor.pool.push(this);\n  };\n\n  /**\n   * @param {Element} toNode\n   */\n  Monkberry.prototype.appendTo = function (toNode) {\n    for (var i = 0, len = this.nodes.length; i < len; i++) {\n      toNode.appendChild(this.nodes[i]);\n    }\n  };\n\n  /**\n   * @param {Element} toNode\n   */\n  Monkberry.prototype.insertBefore = function (toNode) {\n    if (toNode.parentNode) {\n      for (var i = 0, len = this.nodes.length; i < len; i++) {\n        toNode.parentNode.insertBefore(this.nodes[i], toNode);\n      }\n    } else {\n      throw new Error(\n        \"Can not insert child view into parent node. \" +\n        \"You need append your view first and then update.\"\n      );\n    }\n  };\n\n  /**\n   * Return rendered node, or DocumentFragment of rendered nodes if more then one root node in template.\n   * @returns {Element|DocumentFragment}\n   */\n  Monkberry.prototype.createDocument = function () {\n    if (this.nodes.length == 1) {\n      return this.nodes[0];\n    } else {\n      var fragment = document.createDocumentFragment();\n      for (var i = 0, len = this.nodes.length; i < len; i++) {\n        fragment.appendChild(this.nodes[i]);\n      }\n      return fragment;\n    }\n  };\n\n  /**\n   * @param {string} query\n   * @returns {Element}\n   */\n  Monkberry.prototype.querySelector = function (query) {\n    for (var i = 0; i < this.nodes.length; i++) {\n      if (this.nodes[i].matches && this.nodes[i].matches(query)) {\n        return this.nodes[i];\n      }\n\n      if (this.nodes[i].nodeType === 8) {\n        throw 'Can not use querySelector with non-element nodes on first level.';\n      }\n\n      if (this.nodes[i].querySelector) {\n        var element = this.nodes[i].querySelector(query);\n        if (element) {\n          return element;\n        }\n      }\n    }\n    return null;\n  };\n\n\n  /**\n   * Simple Map implementation with length property.\n   */\n  function Map() {\n    this.items = Object.create(null);\n    this.length = 0;\n    this.next = 0;\n  }\n\n  Map.prototype.push = function (element) {\n    this.items[this.next] = element;\n    this.length += 1;\n    this.next += 1;\n    return this.next - 1;\n  };\n\n  Map.prototype.remove = function (i) {\n    if (i in this.items) {\n      delete this.items[i];\n      this.length -= 1;\n    } else {\n      throw new Error('You are trying to delete not existing element \"' + i + '\" form map.');\n    }\n  };\n\n  Map.prototype.forEach = function (callback) {\n    for (var i in this.items) {\n      callback(this.items[i]);\n    }\n  };\n\n  Monkberry.Map = Map;\n\n  //\n  // Helper function for working with foreach loops data.\n  // Will transform data for \"key, value of array\" constructions.\n  //\n\n  function transformArray(array, keys, i, options) {\n    if (options) {\n      var t = {__index__: i};\n      t[options.value] = array[i];\n\n      if (options.key) {\n        t[options.key] = i;\n      }\n\n      return t;\n    } else {\n      return array[i];\n    }\n  }\n\n  function transformObject(array, keys, i, options) {\n    if (options) {\n      var t = {__index__: i};\n      t[options.value] = array[keys[i]];\n\n      if (options.key) {\n        t[options.key] = keys[i];\n      }\n\n      return t;\n    } else {\n      return array[keys[i]];\n    }\n  }\n\n  if (typeof module !== 'undefined') {\n    module.exports = Monkberry;\n  } else {\n    window.Monkberry = Monkberry;\n  }\n})(window.document);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/monkberry/monkberry.js\n ** module id = 1\n ** module chunks = 0\n **/","\"use strict\";\nimport Monkberry from 'monkberry';\nimport 'monkberry-events';\nimport Template from './template.monk';\n\nexport default function (root) {\n  const state = {\n    todos: [\n      {text: 'Primum', complete: true},\n      {text: 'Secundo', complete: false},\n      {text: 'Tertium', complete: false}\n    ]\n  };\n\n  const view = Monkberry.render(Template, root);\n  view.update(state);\n\n  view.on('submit', 'form', function (event) {\n    event.preventDefault();\n    const input = view.querySelector('input');\n    \n    state.todos.push({text: input.value, complete: false});\n    view.update(state);\n    \n    input.value = '';\n  });\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/example/example.js\n **/","/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n(function(factory) {\n\n  // Find the global object for export to both the browser and web workers.\n  var globalObject = typeof window == 'object' && window ||\n                     typeof self == 'object' && self;\n\n  // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  if(typeof exports !== 'undefined') {\n    factory(exports);\n  } else if(globalObject) {\n    // Export hljs globally even when using AMD for cases when this script\n    // is loaded with others that may still expect a global hljs.\n    globalObject.hljs = factory({});\n\n    // Finally register the global hljs with AMD.\n    if(typeof define === 'function' && define.amd) {\n      define([], function() {\n        return globalObject.hljs;\n      });\n    }\n  }\n\n}(function(hljs) {\n\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/&/gm, '&amp;').replace(/</gm, '&lt;').replace(/>/gm, '&gt;');\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index == 0;\n  }\n\n  function isNotHighlighted(language) {\n    return (/^(no-?highlight|plain|text)$/i).test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length,\n        classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    match = (/\\blang(?:uage)?-([\\w-]+)\\b/i).exec(classes);\n    if (match) {\n      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n    for (i = 0, length = classes.length; i < length; i++) {\n      if (getLanguage(classes[i]) || isNotHighlighted(classes[i])) {\n        return classes[i];\n      }\n    }\n  }\n\n  function inherit(parent, obj) {\n    var result = {}, key;\n    for (key in parent)\n      result[key] = parent[key];\n    if (obj)\n      for (key in obj)\n        result[key] = obj[key];\n    return result;\n  }\n\n  /* Stream merging */\n\n  function nodeStream(node) {\n    var result = [];\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType == 3)\n          offset += child.nodeValue.length;\n        else if (child.nodeType == 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset);\n          // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n      return offset;\n    })(node, 0);\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n      if (original[0].offset != highlighted[0].offset) {\n        return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n      }\n\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n\n      if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n\n      ... which is collapsed to:\n      */\n      return highlighted[0].event == 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {return ' ' + a.nodeName + '=\"' + escape(a.value) + '\"';}\n      result += '<' + tag(node) + Array.prototype.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event == 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substr(processed, stream[0].offset - processed));\n      processed = stream[0].offset;\n      if (stream == original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream == original && stream.length && stream[0].offset == processed);\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event == 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n    return result + escape(value.substr(processed));\n  }\n\n  /* Initialization */\n\n  function compileLanguage(language) {\n\n    function reStr(re) {\n        return (re && re.source) || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(\n        reStr(value),\n        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n      );\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled)\n        return;\n      mode.compiled = true;\n\n      mode.keywords = mode.keywords || mode.beginKeywords;\n      if (mode.keywords) {\n        var compiled_keywords = {};\n\n        var flatten = function(className, str) {\n          if (language.case_insensitive) {\n            str = str.toLowerCase();\n          }\n          str.split(' ').forEach(function(kw) {\n            var pair = kw.split('|');\n            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n          });\n        };\n\n        if (typeof mode.keywords == 'string') { // string\n          flatten('keyword', mode.keywords);\n        } else {\n          Object.keys(mode.keywords).forEach(function (className) {\n            flatten(className, mode.keywords[className]);\n          });\n        }\n        mode.keywords = compiled_keywords;\n      }\n      mode.lexemesRe = langRe(mode.lexemes || /\\b\\w+\\b/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n        if (!mode.begin)\n          mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (!mode.end && !mode.endsWithParent)\n          mode.end = /\\B|\\b/;\n        if (mode.end)\n          mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end)\n          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n      if (mode.illegal)\n        mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance === undefined)\n        mode.relevance = 1;\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n      var expanded_contains = [];\n      mode.contains.forEach(function(c) {\n        if (c.variants) {\n          c.variants.forEach(function(v) {expanded_contains.push(inherit(c, v));});\n        } else {\n          expanded_contains.push(c == 'self' ? mode : c);\n        }\n      });\n      mode.contains = expanded_contains;\n      mode.contains.forEach(function(c) {compileMode(c, mode);});\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      var terminators =\n        mode.contains.map(function(c) {\n          return c.beginKeywords ? '\\\\.?(' + c.begin + ')\\\\.?' : c.begin;\n        })\n        .concat([mode.terminator_end, mode.illegal])\n        .map(reStr)\n        .filter(Boolean);\n      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : {exec: function(/*s*/) {return null;}};\n    }\n\n    compileMode(language);\n  }\n\n  /*\n  Core highlighting function. Accepts a language name, or an alias, and a\n  string with the code to highlight. Returns an object with the following\n  properties:\n\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n\n  */\n  function highlight(name, value, ignore_illegals, continuation) {\n\n    function subMode(lexeme, mode) {\n      for (var i = 0; i < mode.contains.length; i++) {\n        if (testRe(mode.contains[i].beginRe, lexeme)) {\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n        return mode;\n      }\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function isIllegal(lexeme, mode) {\n      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan    = '<span class=\"' + classPrefix,\n          closeSpan   = leaveOpen ? '' : '</span>';\n\n      openSpan += classname + '\">';\n\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      if (!top.keywords)\n        return escape(mode_buffer);\n      var result = '';\n      var last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      var match = top.lexemesRe.exec(mode_buffer);\n      while (match) {\n        result += escape(mode_buffer.substr(last_index, match.index - last_index));\n        var keyword_match = keywordMatch(top, match);\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage == 'string';\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ?\n                   highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) :\n                   highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      result += (top.subLanguage !== undefined ? processSubLanguage() : processKeywords());\n      mode_buffer = '';\n    }\n\n    function startNewMode(mode, lexeme) {\n      result += mode.className? buildSpan(mode.className, '', true): '';\n      top = Object.create(mode, {parent: {value: top}});\n    }\n\n    function processLexeme(buffer, lexeme) {\n\n      mode_buffer += buffer;\n\n      if (lexeme === undefined) {\n        processBuffer();\n        return 0;\n      }\n\n      var new_mode = subMode(lexeme, top);\n      if (new_mode) {\n        if (new_mode.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (new_mode.excludeBegin) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n            mode_buffer = lexeme;\n          }\n        }\n        startNewMode(new_mode, lexeme);\n        return new_mode.returnBegin ? 0 : lexeme.length;\n      }\n\n      var end_mode = endOfMode(top, lexeme);\n      if (end_mode) {\n        var origin = top;\n        if (origin.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (!(origin.returnEnd || origin.excludeEnd)) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (origin.excludeEnd) {\n            mode_buffer = lexeme;\n          }\n        }\n        do {\n          if (top.className) {\n            result += '</span>';\n          }\n          if (!top.skip) {\n            relevance += top.relevance;\n          }\n          top = top.parent;\n        } while (top != end_mode.parent);\n        if (end_mode.starts) {\n          startNewMode(end_mode.starts, '');\n        }\n        return origin.returnEnd ? 0 : lexeme.length;\n      }\n\n      if (isIllegal(lexeme, top))\n        throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n\n      /*\n      Parser should not reach this point as all types of lexemes should be caught\n      earlier, but if it does due to some bug make sure it advances at least one\n      character forward to prevent infinite looping.\n      */\n      mode_buffer += lexeme;\n      return lexeme.length || 1;\n    }\n\n    var language = getLanguage(name);\n    if (!language) {\n      throw new Error('Unknown language: \"' + name + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n    var result = '', current;\n    for(current = top; current != language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n    var mode_buffer = '';\n    var relevance = 0;\n    try {\n      var match, count, index = 0;\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(value);\n        if (!match)\n          break;\n        count = processLexeme(value.substr(index, match.index - index), match[0]);\n        index = match.index + count;\n      }\n      processLexeme(value.substr(index));\n      for(current = top; current.parent; current = current.parent) { // close dangling modes\n        if (current.className) {\n          result += '</span>';\n        }\n      }\n      return {\n        relevance: relevance,\n        value: result,\n        language: name,\n        top: top\n      };\n    } catch (e) {\n      if (e.message.indexOf('Illegal') != -1) {\n        return {\n          relevance: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n  */\n  function highlightAuto(text, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n    languageSubset.forEach(function(name) {\n      if (!getLanguage(name)) {\n        return;\n      }\n      var current = highlight(name, text, false);\n      current.language = name;\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n    return result;\n  }\n\n  /*\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n  */\n  function fixMarkup(value) {\n    if (options.tabReplace) {\n      value = value.replace(/^((<[^>]+>|\\t)+)/gm, function(match, p1 /*..., offset, s*/) {\n        return p1.replace(/\\t/g, options.tabReplace);\n      });\n    }\n    if (options.useBR) {\n      value = value.replace(/\\n/g, '<br>');\n    }\n    return value;\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result   = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n  function highlightBlock(block) {\n    var language = blockLanguage(block);\n    if (isNotHighlighted(language))\n        return;\n\n    var node;\n    if (options.useBR) {\n      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n    var text = node.textContent;\n    var result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    var originalStream = nodeStream(node);\n    if (originalStream.length) {\n      var resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n\n  var options = {\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n\n  /*\n  Updates highlight.js global options with values passed in the form of an object.\n  */\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n  function initHighlighting() {\n    if (initHighlighting.called)\n      return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    Array.prototype.forEach.call(blocks, highlightBlock);\n  }\n\n  /*\n  Attaches highlighting to the page load event.\n  */\n  function initHighlightingOnLoad() {\n    addEventListener('DOMContentLoaded', initHighlighting, false);\n    addEventListener('load', initHighlighting, false);\n  }\n\n  var languages = {};\n  var aliases = {};\n\n  function registerLanguage(name, language) {\n    var lang = languages[name] = language(hljs);\n    if (lang.aliases) {\n      lang.aliases.forEach(function(alias) {aliases[alias] = name;});\n    }\n  }\n\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /* Interface definition */\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.inherit = inherit;\n\n  // Common regexps\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n  // Common modes\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\\b/\n  };\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit(\n      {\n        className: 'comment',\n        begin: begin, end: end,\n        contains: []\n      },\n      inherits || {}\n    );\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: \"(?:TODO|FIXME|NOTE|BUG|XXX):\",\n      relevance: 0\n    });\n    return mode;\n  };\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' +\n      '%|em|ex|ch|rem'  +\n      '|vw|vh|vmin|vmax' +\n      '|cm|mm|in|pt|pc|px' +\n      '|deg|grad|rad|turn' +\n      '|s|ms' +\n      '|Hz|kHz' +\n      '|dpi|dpcm|dppx' +\n      ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//, end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/, end: /\\]/,\n        relevance: 0,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  hljs.METHOD_GUARD = {\n    // excludes method names from keyword processing\n    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n\n  return hljs;\n}));\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/highlight.js/highlight.js\n **/","const hljs = require('./highlight');\nhljs.registerLanguage('js', require('./languages/javascript'));\nhljs.registerLanguage('xml', require('./languages/xml'));\nhljs.registerLanguage('monk', require('./languages/monk'));\n\nhljs.configure({\n  languages: [\n    'js',\n    'xml',\n    'monk'\n  ]\n});\n\nexport default hljs;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/highlight.js/index.js\n **/","module.exports = function(hljs) {\n  return {\n    aliases: ['js', 'jsx'],\n    keywords: {\n      keyword:\n        'in of if for while finally var new function do return void else break catch ' +\n        'instanceof with throw case default try this switch continue typeof delete ' +\n        'let yield const export super debugger as async await static ' +\n        // ECMAScript 6 modules import\n        'import from as'\n      ,\n      literal:\n        'true false null undefined NaN Infinity',\n      built_in:\n        'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n        'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n        'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n        'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n        'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n        'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n        'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n        'Promise',\n      monkberry:\n        'Monkberry Template'\n    },\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      {\n        className: 'meta',\n        begin: /^#!/, end: /$/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      { // template string\n        className: 'string',\n        begin: '`', end: '`',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst',\n            begin: '\\\\$\\\\{', end: '\\\\}'\n          }\n        ]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        variants: [\n          { begin: '\\\\b(0[bB][01]+)' },\n          { begin: '\\\\b(0[oO][0-7]+)' },\n          { begin: hljs.C_NUMBER_RE }\n        ],\n        relevance: 0\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          { // E4X / JSX\n            begin: /</, end: /(\\/\\w+|\\w+\\/)>/,\n            subLanguage: 'xml',\n            contains: [\n              {begin: /<\\w+\\/>/, skip: true},\n              {begin: /<\\w+/, end: /(\\/\\w+|\\w+\\/)>/, skip: true, contains: ['self']}\n            ]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: /[A-Za-z$_][0-9A-Za-z$_]*/}),\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: [\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n      hljs.METHOD_GUARD,\n      { // ES6 class\n        className: 'class',\n        beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {beginKeywords: 'extends'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'constructor', end: /\\{/, excludeEnd: true\n      }\n    ],\n    illegal: /#(?!!)/\n  };\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/highlight.js/languages/javascript.js\n **/","module.exports = function(hljs) {\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)'\n  };\n\n  var FUNCTION_NAMES = 'attribute block constant cycle date dump include ' +\n                  'max min parent random range source template_from_string';\n\n  var FUNCTIONS = {\n    beginKeywords: FUNCTION_NAMES,\n    keywords: {name: FUNCTION_NAMES},\n    relevance: 0,\n    contains: [\n      PARAMS\n    ]\n  };\n\n  var FILTER = {\n    begin: /\\|[A-Za-z_]+:?/,\n    keywords:\n      'abs batch capitalize convert_encoding date date_modify default ' +\n      'escape first format join json_encode keys last length lower ' +\n      'merge nl2br number_format raw replace reverse round slice sort split ' +\n      'striptags title trim upper url_encode',\n    contains: [\n      FUNCTIONS\n    ]\n  };\n\n  var OF = {\n    beginKeywords: 'of',\n    keywords: {\n      keyword: 'of'\n    },\n    relevance: 0\n  };\n\n  var TAGS = 'for endfor if endif else import unsafe';\n\n  return {\n    aliases: ['monk'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      hljs.COMMENT(/\\{#/, /#}/),\n      {\n        className: 'template-tag',\n        begin: /\\{%/, end: /%}/,\n        contains: [\n          {\n            className: 'name',\n            begin: /\\w+/,\n            keywords: TAGS,\n            starts: {\n              endsWithParent: true,\n              contains: [OF, FILTER, FUNCTIONS, hljs.QUOTE_STRING_MODE],\n              relevance: 0\n            }\n          }\n        ]\n      },\n      {\n        className: 'template-variable',\n        begin: /\\{\\{/, end: /}}/,\n        contains: ['self', FILTER, FUNCTIONS]\n      },\n      {\n        className: 'directive',\n        begin: /:/,\n        contains: [\n          {\n            className: 'template-variable',\n            begin: /\\{\\{/, end: /}}/,\n            contains: ['self', FILTER, FUNCTIONS]\n          }\n        ]\n      }\n    ]\n  };\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/highlight.js/languages/monk.js\n **/","module.exports = function(hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '=',\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            variants: [\n              {begin: /\"/, end: /\"/},\n              {begin: /'/, end: /'/},\n              {begin: /[^\\s\\/>]+/}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xsl', 'plist'],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '<!DOCTYPE', end: '>',\n        relevance: 10,\n        contains: [{begin: '\\\\[', end: '\\\\]'}]\n      },\n      hljs.COMMENT(\n        '<!--',\n        '-->',\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n        relevance: 10\n      },\n      {\n        begin: /<\\?(php)?/, end: /\\?>/,\n        subLanguage: 'php',\n        contains: [{begin: '/\\\\*', end: '\\\\*/', skip: true}]\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: '<style(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'style'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '</style>', returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: '<script(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'script'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '\\<\\/script\\>', returnEnd: true,\n          subLanguage: ['actionscript', 'javascript', 'handlebars', 'xml']\n        }\n      },\n      {\n        className: 'meta',\n        variants: [\n          {begin: /<\\?xml/, end: /\\?>/, relevance: 10},\n          {begin: /<\\?\\w+/, end: /\\?>/}\n        ]\n      },\n      {\n        className: 'tag',\n        begin: '</?', end: '/?>',\n        contains: [\n          {\n            className: 'name', begin: /[^\\/><\\s]+/, relevance: 0\n          },\n          TAG_INTERNALS\n        ]\n      }\n    ]\n  };\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/highlight.js/languages/xml.js\n **/","/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = global.fetch;\n}.call(global));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/imports-loader?this=>global!./~/exports-loader?global.fetch!./~/whatwg-fetch/fetch.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\n\nvar _monkberry = require('monkberry');\n\nvar _monkberry2 = _interopRequireDefault(_monkberry);\n\nvar _domDelegate = require('dom-delegate');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_monkberry2.default.prototype.on = function (eventType, selector, handler) {\n  var _this = this;\n\n  var useCapture = arguments.length <= 3 || arguments[3] === undefined ? undefined : arguments[3];\n\n  if (!this.delegates) {\n    this.delegates = [];\n    this.nodes.forEach(function (node, i) {\n      if (node.nodeType === 8) {\n        throw 'Can not use event delegating with non-element nodes on first level.';\n      }\n\n      _this.delegates[i] = new _domDelegate.Delegate(node);\n    });\n  }\n\n  this.delegates.forEach(function (delegate) {\n    return delegate.on(eventType, selector, handler, useCapture);\n  });\n};\n\n_monkberry2.default.prototype.off = function () {\n  var eventType = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];\n  var selector = arguments.length <= 1 || arguments[1] === undefined ? undefined : arguments[1];\n  var handler = arguments.length <= 2 || arguments[2] === undefined ? undefined : arguments[2];\n  var useCapture = arguments.length <= 3 || arguments[3] === undefined ? undefined : arguments[3];\n\n  this.delegates.forEach(function (delegate) {\n    return delegate.off(eventType, selector, handler, useCapture);\n  });\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/monkberry-events/lib/index.js\n ** module id = 9\n ** module chunks = 0\n **/","/*jshint browser:true, node:true*/\n\n'use strict';\n\nmodule.exports = Delegate;\n\n/**\n * DOM event delegator\n *\n * The delegator will listen\n * for events that bubble up\n * to the root node.\n *\n * @constructor\n * @param {Node|string} [root] The root node or a selector string matching the root node\n */\nfunction Delegate(root) {\n\n  /**\n   * Maintain a map of listener\n   * lists, keyed by event name.\n   *\n   * @type Object\n   */\n  this.listenerMap = [{}, {}];\n  if (root) {\n    this.root(root);\n  }\n\n  /** @type function() */\n  this.handle = Delegate.prototype.handle.bind(this);\n}\n\n/**\n * Start listening for events\n * on the provided DOM element\n *\n * @param  {Node|string} [root] The root node or a selector string matching the root node\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.root = function(root) {\n  var listenerMap = this.listenerMap;\n  var eventType;\n\n  // Remove master event listeners\n  if (this.rootElement) {\n    for (eventType in listenerMap[1]) {\n      if (listenerMap[1].hasOwnProperty(eventType)) {\n        this.rootElement.removeEventListener(eventType, this.handle, true);\n      }\n    }\n    for (eventType in listenerMap[0]) {\n      if (listenerMap[0].hasOwnProperty(eventType)) {\n        this.rootElement.removeEventListener(eventType, this.handle, false);\n      }\n    }\n  }\n\n  // If no root or root is not\n  // a dom node, then remove internal\n  // root reference and exit here\n  if (!root || !root.addEventListener) {\n    if (this.rootElement) {\n      delete this.rootElement;\n    }\n    return this;\n  }\n\n  /**\n   * The root node at which\n   * listeners are attached.\n   *\n   * @type Node\n   */\n  this.rootElement = root;\n\n  // Set up master event listeners\n  for (eventType in listenerMap[1]) {\n    if (listenerMap[1].hasOwnProperty(eventType)) {\n      this.rootElement.addEventListener(eventType, this.handle, true);\n    }\n  }\n  for (eventType in listenerMap[0]) {\n    if (listenerMap[0].hasOwnProperty(eventType)) {\n      this.rootElement.addEventListener(eventType, this.handle, false);\n    }\n  }\n\n  return this;\n};\n\n/**\n * @param {string} eventType\n * @returns boolean\n */\nDelegate.prototype.captureForType = function(eventType) {\n  return ['blur', 'error', 'focus', 'load', 'resize', 'scroll'].indexOf(eventType) !== -1;\n};\n\n/**\n * Attach a handler to one\n * event for all elements\n * that match the selector,\n * now or in the future\n *\n * The handler function receives\n * three arguments: the DOM event\n * object, the node that matched\n * the selector while the event\n * was bubbling and a reference\n * to itself. Within the handler,\n * 'this' is equal to the second\n * argument.\n *\n * The node that actually received\n * the event can be accessed via\n * 'event.target'.\n *\n * @param {string} eventType Listen for these events\n * @param {string|undefined} selector Only handle events on elements matching this selector, if undefined match root element\n * @param {function()} handler Handler function - event data passed here will be in event.data\n * @param {Object} [eventData] Data to pass in event.data\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.on = function(eventType, selector, handler, useCapture) {\n  var root, listenerMap, matcher, matcherParam;\n\n  if (!eventType) {\n    throw new TypeError('Invalid event type: ' + eventType);\n  }\n\n  // handler can be passed as\n  // the second or third argument\n  if (typeof selector === 'function') {\n    useCapture = handler;\n    handler = selector;\n    selector = null;\n  }\n\n  // Fallback to sensible defaults\n  // if useCapture not set\n  if (useCapture === undefined) {\n    useCapture = this.captureForType(eventType);\n  }\n\n  if (typeof handler !== 'function') {\n    throw new TypeError('Handler must be a type of Function');\n  }\n\n  root = this.rootElement;\n  listenerMap = this.listenerMap[useCapture ? 1 : 0];\n\n  // Add master handler for type if not created yet\n  if (!listenerMap[eventType]) {\n    if (root) {\n      root.addEventListener(eventType, this.handle, useCapture);\n    }\n    listenerMap[eventType] = [];\n  }\n\n  if (!selector) {\n    matcherParam = null;\n\n    // COMPLEX - matchesRoot needs to have access to\n    // this.rootElement, so bind the function to this.\n    matcher = matchesRoot.bind(this);\n\n  // Compile a matcher for the given selector\n  } else if (/^[a-z]+$/i.test(selector)) {\n    matcherParam = selector;\n    matcher = matchesTag;\n  } else if (/^#[a-z0-9\\-_]+$/i.test(selector)) {\n    matcherParam = selector.slice(1);\n    matcher = matchesId;\n  } else {\n    matcherParam = selector;\n    matcher = matches;\n  }\n\n  // Add to the list of listeners\n  listenerMap[eventType].push({\n    selector: selector,\n    handler: handler,\n    matcher: matcher,\n    matcherParam: matcherParam\n  });\n\n  return this;\n};\n\n/**\n * Remove an event handler\n * for elements that match\n * the selector, forever\n *\n * @param {string} [eventType] Remove handlers for events matching this type, considering the other parameters\n * @param {string} [selector] If this parameter is omitted, only handlers which match the other two will be removed\n * @param {function()} [handler] If this parameter is omitted, only handlers which match the previous two will be removed\n * @returns {Delegate} This method is chainable\n */\nDelegate.prototype.off = function(eventType, selector, handler, useCapture) {\n  var i, listener, listenerMap, listenerList, singleEventType;\n\n  // Handler can be passed as\n  // the second or third argument\n  if (typeof selector === 'function') {\n    useCapture = handler;\n    handler = selector;\n    selector = null;\n  }\n\n  // If useCapture not set, remove\n  // all event listeners\n  if (useCapture === undefined) {\n    this.off(eventType, selector, handler, true);\n    this.off(eventType, selector, handler, false);\n    return this;\n  }\n\n  listenerMap = this.listenerMap[useCapture ? 1 : 0];\n  if (!eventType) {\n    for (singleEventType in listenerMap) {\n      if (listenerMap.hasOwnProperty(singleEventType)) {\n        this.off(singleEventType, selector, handler);\n      }\n    }\n\n    return this;\n  }\n\n  listenerList = listenerMap[eventType];\n  if (!listenerList || !listenerList.length) {\n    return this;\n  }\n\n  // Remove only parameter matches\n  // if specified\n  for (i = listenerList.length - 1; i >= 0; i--) {\n    listener = listenerList[i];\n\n    if ((!selector || selector === listener.selector) && (!handler || handler === listener.handler)) {\n      listenerList.splice(i, 1);\n    }\n  }\n\n  // All listeners removed\n  if (!listenerList.length) {\n    delete listenerMap[eventType];\n\n    // Remove the main handler\n    if (this.rootElement) {\n      this.rootElement.removeEventListener(eventType, this.handle, useCapture);\n    }\n  }\n\n  return this;\n};\n\n\n/**\n * Handle an arbitrary event.\n *\n * @param {Event} event\n */\nDelegate.prototype.handle = function(event) {\n  var i, l, type = event.type, root, phase, listener, returned, listenerList = [], target, /** @const */ EVENTIGNORE = 'ftLabsDelegateIgnore';\n\n  if (event[EVENTIGNORE] === true) {\n    return;\n  }\n\n  target = event.target;\n\n  // Hardcode value of Node.TEXT_NODE\n  // as not defined in IE8\n  if (target.nodeType === 3) {\n    target = target.parentNode;\n  }\n\n  root = this.rootElement;\n\n  phase = event.eventPhase || ( event.target !== event.currentTarget ? 3 : 2 );\n  \n  switch (phase) {\n    case 1: //Event.CAPTURING_PHASE:\n      listenerList = this.listenerMap[1][type];\n    break;\n    case 2: //Event.AT_TARGET:\n      if (this.listenerMap[0] && this.listenerMap[0][type]) listenerList = listenerList.concat(this.listenerMap[0][type]);\n      if (this.listenerMap[1] && this.listenerMap[1][type]) listenerList = listenerList.concat(this.listenerMap[1][type]);\n    break;\n    case 3: //Event.BUBBLING_PHASE:\n      listenerList = this.listenerMap[0][type];\n    break;\n  }\n\n  // Need to continuously check\n  // that the specific list is\n  // still populated in case one\n  // of the callbacks actually\n  // causes the list to be destroyed.\n  l = listenerList.length;\n  while (target && l) {\n    for (i = 0; i < l; i++) {\n      listener = listenerList[i];\n\n      // Bail from this loop if\n      // the length changed and\n      // no more listeners are\n      // defined between i and l.\n      if (!listener) {\n        break;\n      }\n\n      // Check for match and fire\n      // the event if there's one\n      //\n      // TODO:MCG:20120117: Need a way\n      // to check if event#stopImmediatePropagation\n      // was called. If so, break both loops.\n      if (listener.matcher.call(target, listener.matcherParam, target)) {\n        returned = this.fire(event, target, listener);\n      }\n\n      // Stop propagation to subsequent\n      // callbacks if the callback returned\n      // false\n      if (returned === false) {\n        event[EVENTIGNORE] = true;\n        event.preventDefault();\n        return;\n      }\n    }\n\n    // TODO:MCG:20120117: Need a way to\n    // check if event#stopPropagation\n    // was called. If so, break looping\n    // through the DOM. Stop if the\n    // delegation root has been reached\n    if (target === root) {\n      break;\n    }\n\n    l = listenerList.length;\n    target = target.parentElement;\n  }\n};\n\n/**\n * Fire a listener on a target.\n *\n * @param {Event} event\n * @param {Node} target\n * @param {Object} listener\n * @returns {boolean}\n */\nDelegate.prototype.fire = function(event, target, listener) {\n  return listener.handler.call(target, event, target);\n};\n\n/**\n * Check whether an element\n * matches a generic selector.\n *\n * @type function()\n * @param {string} selector A CSS selector\n */\nvar matches = (function(el) {\n  if (!el) return;\n  var p = el.prototype;\n  return (p.matches || p.matchesSelector || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector);\n}(Element));\n\n/**\n * Check whether an element\n * matches a tag selector.\n *\n * Tags are NOT case-sensitive,\n * except in XML (and XML-based\n * languages such as XHTML).\n *\n * @param {string} tagName The tag name to test against\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesTag(tagName, element) {\n  return tagName.toLowerCase() === element.tagName.toLowerCase();\n}\n\n/**\n * Check whether an element\n * matches the root.\n *\n * @param {?String} selector In this case this is always passed through as null and not used\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesRoot(selector, element) {\n  /*jshint validthis:true*/\n  if (this.rootElement === window) return element === document;\n  return this.rootElement === element;\n}\n\n/**\n * Check whether the ID of\n * the element in 'this'\n * matches the given ID.\n *\n * IDs are case-sensitive.\n *\n * @param {string} id The ID to test against\n * @param {Element} element The element to test with\n * @returns boolean\n */\nfunction matchesId(id, element) {\n  return id === element.id;\n}\n\n/**\n * Short hand for off()\n * and root(), ie both\n * with no parameters\n *\n * @return void\n */\nDelegate.prototype.destroy = function() {\n  this.off();\n  this.root();\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/monkberry-events/~/dom-delegate/lib/delegate.js\n ** module id = 10\n ** module chunks = 0\n **/","/*jshint browser:true, node:true*/\n\n'use strict';\n\n/**\n * @preserve Create and manage a DOM event delegator.\n *\n * @version 0.3.0\n * @codingstandard ftlabs-jsv2\n * @copyright The Financial Times Limited [All Rights Reserved]\n * @license MIT License (see LICENSE.txt)\n */\nvar Delegate = require('./delegate');\n\nmodule.exports = function(root) {\n  return new Delegate(root);\n};\n\nmodule.exports.Delegate = Delegate;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/monkberry-events/~/dom-delegate/lib/index.js\n ** module id = 11\n ** module chunks = 0\n **/","<ol>\n    {% for i, todo of todos %}\n        <li>\n            {% if todo.complete %}\n                <del>{{ todo.text }}</del>\n            {% else %}\n                <em>{{ todo.text }}</em>\n            {% endif %}\n        </li>\n    {% endfor %}\n</ol>\n<form>\n    <input type=\"text\">\n    <button type=\"submit\">Add #{{ todos.length + 1 }}</button>\n</form>\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/example/template.monk\n ** module id = 12\n ** module chunks = 0\n **/"],"sourceRoot":""}